{"mappings":"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","sources":["node_modules/@quilicicf/markdown-formatter/lib/formatFromString.js","node_modules/unified/index.js","node_modules/unified/lib/index.js","node_modules/bail/index.js","node_modules/is-buffer/index.js","node_modules/extend/index.js","node_modules/is-plain-obj/index.js","node_modules/trough/index.js","node_modules/vfile/index.js","node_modules/vfile/lib/index.js","node_modules/vfile/lib/minpath.js","node_modules/vfile/lib/minproc.js","node_modules/vfile-message/index.js","node_modules/unist-util-stringify-position/index.js","node_modules/remark-parse/index.js","node_modules/remark-parse/lib/index.js","node_modules/mdast-util-from-markdown/index.js","node_modules/mdast-util-from-markdown/lib/index.js","node_modules/mdast-util-to-string/index.js","node_modules/micromark/lib/parse.js","node_modules/micromark-util-combine-extensions/index.js","node_modules/micromark-util-chunked/index.js","node_modules/micromark/lib/initialize/content.js","node_modules/micromark-factory-space/index.js","node_modules/micromark-util-character/index.js","node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","node_modules/micromark/lib/initialize/document.js","node_modules/micromark/lib/initialize/flow.js","node_modules/micromark-core-commonmark/index.js","node_modules/micromark-core-commonmark/lib/attention.js","node_modules/micromark-util-classify-character/index.js","node_modules/micromark-util-resolve-all/index.js","node_modules/micromark-core-commonmark/lib/autolink.js","node_modules/micromark-core-commonmark/lib/blank-line.js","node_modules/micromark-core-commonmark/lib/block-quote.js","node_modules/micromark-core-commonmark/lib/character-escape.js","node_modules/micromark-core-commonmark/lib/character-reference.js","node_modules/parse-entities/decode-entity.js","node_modules/character-entities/index.js","node_modules/micromark-core-commonmark/lib/code-fenced.js","node_modules/micromark-core-commonmark/lib/code-indented.js","node_modules/micromark-core-commonmark/lib/code-text.js","node_modules/micromark-core-commonmark/lib/content.js","node_modules/micromark-util-subtokenize/index.js","node_modules/micromark-core-commonmark/lib/definition.js","node_modules/micromark-factory-destination/index.js","node_modules/micromark-factory-label/index.js","node_modules/micromark-factory-title/index.js","node_modules/micromark-factory-whitespace/index.js","node_modules/micromark-util-normalize-identifier/index.js","node_modules/micromark-core-commonmark/lib/hard-break-escape.js","node_modules/micromark-core-commonmark/lib/heading-atx.js","node_modules/micromark-core-commonmark/lib/html-flow.js","node_modules/micromark-util-html-tag-name/index.js","node_modules/micromark-core-commonmark/lib/html-text.js","node_modules/micromark-core-commonmark/lib/label-end.js","node_modules/micromark-core-commonmark/lib/label-start-image.js","node_modules/micromark-core-commonmark/lib/label-start-link.js","node_modules/micromark-core-commonmark/lib/line-ending.js","node_modules/micromark-core-commonmark/lib/list.js","node_modules/micromark-core-commonmark/lib/thematic-break.js","node_modules/micromark-core-commonmark/lib/setext-underline.js","node_modules/micromark/lib/initialize/text.js","node_modules/micromark/lib/create-tokenizer.js","node_modules/micromark/lib/constructs.js","node_modules/micromark/lib/preprocess.js","node_modules/micromark/lib/postprocess.js","node_modules/micromark-util-decode-numeric-character-reference/index.js","node_modules/remark-gfm/index.js","node_modules/micromark-extension-gfm/index.js","node_modules/micromark-extension-gfm-autolink-literal/index.js","node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","node_modules/micromark-extension-gfm-autolink-literal/lib/html.js","node_modules/micromark-util-sanitize-uri/index.js","node_modules/micromark-util-encode/index.js","node_modules/micromark-extension-gfm-strikethrough/index.js","node_modules/micromark-extension-gfm-strikethrough/lib/html.js","node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","node_modules/micromark-extension-gfm-table/index.js","node_modules/micromark-extension-gfm-table/lib/html.js","node_modules/micromark-extension-gfm-table/lib/syntax.js","node_modules/micromark-extension-gfm-tagfilter/index.js","node_modules/micromark-extension-gfm-task-list-item/index.js","node_modules/micromark-extension-gfm-task-list-item/lib/html.js","node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","node_modules/mdast-util-gfm/index.js","node_modules/mdast-util-gfm-autolink-literal/index.js","node_modules/ccount/index.js","node_modules/mdast-util-find-and-replace/index.js","node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","node_modules/unist-util-visit-parents/index.js","node_modules/unist-util-is/index.js","node_modules/unist-util-visit-parents/color.js","node_modules/mdast-util-gfm-strikethrough/index.js","node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","node_modules/mdast-util-gfm-table/index.js","node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","node_modules/markdown-table/index.js","node_modules/mdast-util-gfm-task-list-item/index.js","node_modules/mdast-util-to-markdown/lib/handle/list-item.js","node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","node_modules/mdast-util-to-markdown/lib/util/container-flow.js","node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","node_modules/remark-stringify/index.js","node_modules/remark-stringify/lib/index.js","node_modules/mdast-util-to-markdown/index.js","node_modules/mdast-util-to-markdown/lib/index.js","node_modules/zwitch/index.js","node_modules/mdast-util-to-markdown/lib/configure.js","node_modules/mdast-util-to-markdown/lib/handle/index.js","node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","node_modules/mdast-util-to-markdown/lib/handle/break.js","node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","node_modules/mdast-util-to-markdown/lib/handle/code.js","node_modules/longest-streak/index.js","node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","node_modules/mdast-util-to-markdown/lib/util/check-fence.js","node_modules/mdast-util-to-markdown/lib/util/safe.js","node_modules/mdast-util-to-markdown/lib/handle/definition.js","node_modules/mdast-util-to-markdown/lib/util/association.js","node_modules/mdast-util-to-markdown/lib/util/check-quote.js","node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","node_modules/mdast-util-to-markdown/lib/handle/heading.js","node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","node_modules/mdast-util-to-markdown/lib/handle/html.js","node_modules/mdast-util-to-markdown/lib/handle/image.js","node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","node_modules/mdast-util-to-markdown/lib/handle/link.js","node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","node_modules/mdast-util-to-markdown/lib/handle/list.js","node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","node_modules/mdast-util-to-markdown/lib/handle/root.js","node_modules/mdast-util-to-markdown/lib/handle/strong.js","node_modules/mdast-util-to-markdown/lib/util/check-strong.js","node_modules/mdast-util-to-markdown/lib/handle/text.js","node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","node_modules/mdast-util-to-markdown/lib/util/check-rule.js","node_modules/mdast-util-to-markdown/lib/join.js","node_modules/mdast-util-to-markdown/lib/unsafe.js","node_modules/@quilicicf/markdown-formatter/lib/remark-plugins/toc/index.js","node_modules/mdast-util-toc/index.js","node_modules/mdast-util-toc/lib/index.js","node_modules/mdast-util-toc/lib/search.js","node_modules/github-slugger/index.js","node_modules/github-slugger/node_modules/emoji-regex/index.js","node_modules/unist-util-visit/index.js","node_modules/mdast-util-toc/lib/to-expression.js","node_modules/mdast-util-toc/lib/contents.js","node_modules/unist-builder/index.js","node_modules/@quilicicf/markdown-formatter/lib/remark-plugins/toc/findTocStart.js","node_modules/@quilicicf/markdown-formatter/lib/remark-plugins/toc/isTocStart.js","node_modules/@quilicicf/markdown-formatter/lib/constants.js","node_modules/@quilicicf/markdown-formatter/lib/remark-plugins/isTocEnd.js","node_modules/@quilicicf/markdown-formatter/lib/remark-plugins/toc/parseTocConfiguration.js","node_modules/@quilicicf/markdown-formatter/lib/matchAll.js","node_modules/@quilicicf/markdown-formatter/lib/isInRange.js","node_modules/@quilicicf/markdown-formatter/lib/remark-plugins/watermarkPlugin/index.js","node_modules/@quilicicf/markdown-formatter/lib/remark-plugins/watermarkPlugin/addWatermarkInTocEnd.js","node_modules/@quilicicf/markdown-formatter/lib/remark-plugins/watermarkPlugin/searchAndDestroyWatermarkTop.js"],"sourcesContent":["import { unified } from 'unified';\nimport parse from 'remark-parse';\nimport gfm from 'remark-gfm';\nimport stringify from 'remark-stringify';\n\nimport tocPlugin from './remark-plugins/toc/index.js';\nimport watermarkPlugin from './remark-plugins/watermarkPlugin/index.js';\nimport { DEFAULT_MARKDOWN_FORMATTER_OPTIONS, DEFAULT_STRINGIFY_OPTIONS } from './constants.js';\n\nexport default async (sourceString, parameterMarkdownFormatterOptions = {}, parameterStringifyOptions = {}) => {\n  const markdownFormatterOptions = {\n    ...DEFAULT_MARKDOWN_FORMATTER_OPTIONS,\n    ...parameterMarkdownFormatterOptions,\n  };\n  const stringifyOptions = {\n    ...DEFAULT_STRINGIFY_OPTIONS,\n    ...parameterStringifyOptions,\n  };\n\n  return unified()\n    .use(parse)\n    .use(gfm)\n    .use(tocPlugin)\n    .use(watermarkPlugin(markdownFormatterOptions.watermark))\n    .use(stringify, stringifyOptions)\n    .process(sourceString);\n};\n","export {unified} from './lib/index.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[1] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error | null | undefined} [error]\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: any[]) => void} Callback\n * @typedef {(...input: any[]) => any} Middleware\n *\n * @typedef {(...input: any[]) => void} Run Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Middleware[]} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {any[]} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @param {any[]} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware(...parameters)\n    } catch (error) {\n      /** @type {Error} */\n      const exception = error\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('./lib/index.js').BufferEncoding} BufferEncoding\n * @typedef {import('./lib/index.js').VFileValue} VFileValue\n * @typedef {import('./lib/index.js').VFileOptions} VFileOptions\n * @typedef {import('./lib/index.js').VFileCompatible} VFileCompatible\n *\n * @typedef {import('./lib/index.js').VFileReporterSettings} VFileReporterSettings\n * @typedef {import('./lib/index.js').VFileReporter} VFileReporter\n */\n\nexport {VFile} from './lib/index.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/a2bc1d8/types/node/globals.d.ts#L174>\n *\n * @typedef {string|Uint8Array} VFileValue Contents of the file.\n *   Can either be text, or a Buffer like structure.\n *   This does not directly use type `Buffer`, because it can also be used in a\n *   browser context.\n *   Instead this leverages `Uint8Array` which is the base type for `Buffer`,\n *   and a native JavaScript construct.\n *\n * @typedef {VFileValue|VFileOptions|VFile} VFileCompatible Things that can be\n *   passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {VFileValue} [value]\n * @property {string} [cwd]\n * @property {Array.<string>} [history]\n * @property {string} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Object.<string, unknown>} [data]\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} VFileOptions\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Object.<string, unknown>} VFileReporterSettings\n * @typedef {<T = VFileReporterSettings>(files: VFile[], options: T) => string} VFileReporter\n */\n\nimport buffer from 'is-buffer'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {VFileMessage} from 'vfile-message'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nvar order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, treats it as `{value: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All other given fields are set on the newly created `VFile`.\n   *\n   * Path related properties are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {VFileCompatible} [value]\n   */\n  constructor(value) {\n    var index = -1\n    /** @type {VFileOptions} */\n    var options\n    /** @type {string} */\n    var prop\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-ignore Looks like a buffer.\n      options = {value}\n    } else {\n      // @ts-ignore Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information.\n     * It’s OK to store custom data directly on the file, moving it to `data`\n     * gives a little more privacy.\n     * @type {Object.<string, unknown>}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array.<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of file paths the file moved between.\n     * @type {Array.<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path`.\n     * Defaults to `process.cwd()` (`/` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {VFileValue}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    while (++index < order.length) {\n      prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        this[prop] = prop === 'history' ? options[prop].concat() : options[prop]\n      }\n    }\n\n    // Set non-path related properties.\n    for (prop in options) {\n      if (!order.includes(prop)) {\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Access full path (`~/index.min.js`).\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set full path (`~/index.min.js`).\n   * Cannot be nullified.\n   */\n  set path(path) {\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Access parent path (`~`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set parent path (`~`).\n   * Cannot be set if there's no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.path, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Access basename (including extname) (`index.min.js`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (`index.min.js`).\n   * Cannot contain path separators.\n   * Cannot be nullified either (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Access extname (including dot) (`.js`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set extname (including dot) (`.js`).\n   * Cannot be set if there's no `path` yet and cannot contain path separators.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.path, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Access stem (w/o extname) (`index.min`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set stem (w/o extname) (`index.min`).\n   * Cannot be nullified, and cannot contain path separators.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8'] If `file.value` is a buffer, `encoding` is used to serialize buffers.\n   * @returns {string}\n   */\n  toString(encoding) {\n    // @ts-ignore string’s don’t accept the parameter, but buffers do.\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Create a message and associates it w/ the file.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  message(reason, place, origin) {\n    var message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Info: create a message, associate it with the file, and mark the fatality\n   * as `null`.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  info(reason, place, origin) {\n    var message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Fail: create a message, associate it with the file, mark the fatality as\n   * `true`.\n   * Note: fatal errors mean a file is no longer processable.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {never}\n   */\n  fail(reason, place, origin) {\n    var message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string} path\n * @param {string} name\n * @returns {void}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import path from 'path'\n\nexport {path}\n","export const proc = process\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string?, string?]} */\n    var parts = [null, null]\n    /** @type {Position} */\n    var position = {\n      start: {line: null, column: null},\n      end: {line: null, column: null}\n    }\n    /** @type {number} */\n    var index\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = null\n    }\n\n    if (typeof origin === 'string') {\n      index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-ignore Looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // @ts-ignore Looks like a point.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    this.fatal\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","var own = {}.hasOwnProperty\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|Position|Point} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if (own.call(value, 'position') || own.call(value, 'type')) {\n    // @ts-ignore looks like a node.\n    return position(value.position)\n  }\n\n  // Position.\n  if (own.call(value, 'start') || own.call(value, 'end')) {\n    // @ts-ignore looks like a position.\n    return position(value)\n  }\n\n  // Point.\n  if (own.call(value, 'line') || own.call(value, 'column')) {\n    // @ts-ignore looks like a point.\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('./lib/index.js').Value} Value\n * @typedef {import('./lib/index.js').Encoding} Encoding\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Extension} Extension\n * @typedef {import('./lib/index.js').Handle} Handle\n * @typedef {import('./lib/index.js').Transform} Transform\n * @typedef {import('./lib/index.js').Token} Token\n * @typedef {import('./lib/index.js').CompileContext} CompileContext\n */\nexport {fromMarkdown} from './lib/index.js'\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {Root|Root['children'][number]} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array.<unknown>> & {canContainEols: Array.<string>, transforms: Array.<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array.<Node>} stack\n * @property {Array.<Token>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array.<Extension|Array.<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeEntity} from 'parse-entities/decode-entity.js'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array.<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array.<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      throw new Error(\n        'Cannot close document, a token (`' +\n          tokenStack[tokenStack.length - 1].type +\n          '`, ' +\n          stringifyPosition({\n            start: tokenStack[tokenStack.length - 1].start,\n            end: tokenStack[tokenStack.length - 1].end\n          }) +\n          ') is still open'\n      )\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array.<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    // @ts-expect-error: Custom node type to collect text.\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @returns {N}\n   */\n\n  function enter(node, token) {\n    /** @type {Parent} */\n    // @ts-expect-error: Assume parent.\n    const parent = this.stack[this.stack.length - 1]\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push(token) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /** @type {CompileContext['exit']} */\n\n  function exit(token) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open.type !== token.type) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): a different token (`' +\n          open.type +\n          '`, ' +\n          stringifyPosition({\n            start: open.start,\n            end: open.end\n          }) +\n          ') is open'\n      )\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      this.stack[this.stack.length - 2].start = Number.parseInt(\n        this.sliceSerialize(token),\n        10\n      )\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].value = data.replace(\n      /^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g,\n      ''\n    )\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    if (!this.stack[this.stack.length - 1].depth) {\n      this.stack[this.stack.length - 1].depth =\n        this.sliceSerialize(token).length\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    this.stack[this.stack.length - 1].depth =\n      this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    /** @type {Parent} */\n    // @ts-expect-error: assume parent.\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Node} */\n    // @ts-expect-error: assume child.\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      }\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    /** @type {Parent} */\n    // @ts-expect-error: supposed to be a parent.\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context = this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context = this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    this.stack[this.stack.length - 2].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    this.stack[this.stack.length - 1].label = value // Assume a reference.\n\n    setData('inReference', true)\n\n    if (this.stack[this.stack.length - 1].type === 'link') {\n      this.stack[this.stack.length - 1].children = fragment.children\n    } else {\n      this.stack[this.stack.length - 1].alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeEntity` can return false for invalid named\n      // character references, but everything we’ve tokenized is valid.\n      value = decodeEntity(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url =\n      'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    // @ts-expect-error: we’ve always used `null`.\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      // @ts-expect-error: we’ve always used `null`.\n      label: null,\n      // @ts-expect-error: we’ve always used `null`.\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    // @ts-expect-error: we’ve always used `null`.\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    // @ts-expect-error: we’ve always used `null`.\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      // @ts-expect-error: we’ve always used `null`.\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      // @ts-expect-error: we’ve always used `null`.\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array.<Extension|Array.<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    if (self.containerState._closeFlow) closeFlow()\n    continued++\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(childFlow.currentConstruct)\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","export {attention} from './lib/attention.js'\nexport {autolink} from './lib/autolink.js'\nexport {blankLine} from './lib/blank-line.js'\nexport {blockQuote} from './lib/block-quote.js'\nexport {characterEscape} from './lib/character-escape.js'\nexport {characterReference} from './lib/character-reference.js'\nexport {codeFenced} from './lib/code-fenced.js'\nexport {codeIndented} from './lib/code-indented.js'\nexport {codeText} from './lib/code-text.js'\nexport {content} from './lib/content.js'\nexport {definition} from './lib/definition.js'\nexport {hardBreakEscape} from './lib/hard-break-escape.js'\nexport {headingAtx} from './lib/heading-atx.js'\nexport {htmlFlow} from './lib/html-flow.js'\nexport {htmlText} from './lib/html-text.js'\nexport {labelEnd} from './lib/label-end.js'\nexport {labelStartImage} from './lib/label-start-image.js'\nexport {labelStartLink} from './lib/label-start-link.js'\nexport {lineEnding} from './lib/line-ending.js'\nexport {list} from './lib/list.js'\nexport {setextUnderline} from './lib/setext-underline.js'\nexport {thematicBreak} from './lib/thematic-break.js'\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const before = classifyCharacter(this.previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open = !after || (after === 2 && before)\n    const close = !before || (before === 2 && after)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeEntity} from 'parse-entities/decode-entity.js'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","import {characterEntities} from 'character-entities'\n\nvar own = {}.hasOwnProperty\n\n/**\n * @param {string} characters\n * @returns {string|false}\n */\nexport function decodeEntity(characters) {\n  return own.call(characterEntities, characters)\n    ? characterEntities[characters]\n    : false\n}\n","export var characterEntities = {\n  AEli: 'Æ',\n  AElig: 'Æ',\n  AM: '&',\n  AMP: '&',\n  Aacut: 'Á',\n  Aacute: 'Á',\n  Abreve: 'Ă',\n  Acir: 'Â',\n  Acirc: 'Â',\n  Acy: 'А',\n  Afr: '𝔄',\n  Agrav: 'À',\n  Agrave: 'À',\n  Alpha: 'Α',\n  Amacr: 'Ā',\n  And: '⩓',\n  Aogon: 'Ą',\n  Aopf: '𝔸',\n  ApplyFunction: '⁡',\n  Arin: 'Å',\n  Aring: 'Å',\n  Ascr: '𝒜',\n  Assign: '≔',\n  Atild: 'Ã',\n  Atilde: 'Ã',\n  Aum: 'Ä',\n  Auml: 'Ä',\n  Backslash: '∖',\n  Barv: '⫧',\n  Barwed: '⌆',\n  Bcy: 'Б',\n  Because: '∵',\n  Bernoullis: 'ℬ',\n  Beta: 'Β',\n  Bfr: '𝔅',\n  Bopf: '𝔹',\n  Breve: '˘',\n  Bscr: 'ℬ',\n  Bumpeq: '≎',\n  CHcy: 'Ч',\n  COP: '©',\n  COPY: '©',\n  Cacute: 'Ć',\n  Cap: '⋒',\n  CapitalDifferentialD: 'ⅅ',\n  Cayleys: 'ℭ',\n  Ccaron: 'Č',\n  Ccedi: 'Ç',\n  Ccedil: 'Ç',\n  Ccirc: 'Ĉ',\n  Cconint: '∰',\n  Cdot: 'Ċ',\n  Cedilla: '¸',\n  CenterDot: '·',\n  Cfr: 'ℭ',\n  Chi: 'Χ',\n  CircleDot: '⊙',\n  CircleMinus: '⊖',\n  CirclePlus: '⊕',\n  CircleTimes: '⊗',\n  ClockwiseContourIntegral: '∲',\n  CloseCurlyDoubleQuote: '”',\n  CloseCurlyQuote: '’',\n  Colon: '∷',\n  Colone: '⩴',\n  Congruent: '≡',\n  Conint: '∯',\n  ContourIntegral: '∮',\n  Copf: 'ℂ',\n  Coproduct: '∐',\n  CounterClockwiseContourIntegral: '∳',\n  Cross: '⨯',\n  Cscr: '𝒞',\n  Cup: '⋓',\n  CupCap: '≍',\n  DD: 'ⅅ',\n  DDotrahd: '⤑',\n  DJcy: 'Ђ',\n  DScy: 'Ѕ',\n  DZcy: 'Џ',\n  Dagger: '‡',\n  Darr: '↡',\n  Dashv: '⫤',\n  Dcaron: 'Ď',\n  Dcy: 'Д',\n  Del: '∇',\n  Delta: 'Δ',\n  Dfr: '𝔇',\n  DiacriticalAcute: '´',\n  DiacriticalDot: '˙',\n  DiacriticalDoubleAcute: '˝',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '˜',\n  Diamond: '⋄',\n  DifferentialD: 'ⅆ',\n  Dopf: '𝔻',\n  Dot: '¨',\n  DotDot: '⃜',\n  DotEqual: '≐',\n  DoubleContourIntegral: '∯',\n  DoubleDot: '¨',\n  DoubleDownArrow: '⇓',\n  DoubleLeftArrow: '⇐',\n  DoubleLeftRightArrow: '⇔',\n  DoubleLeftTee: '⫤',\n  DoubleLongLeftArrow: '⟸',\n  DoubleLongLeftRightArrow: '⟺',\n  DoubleLongRightArrow: '⟹',\n  DoubleRightArrow: '⇒',\n  DoubleRightTee: '⊨',\n  DoubleUpArrow: '⇑',\n  DoubleUpDownArrow: '⇕',\n  DoubleVerticalBar: '∥',\n  DownArrow: '↓',\n  DownArrowBar: '⤓',\n  DownArrowUpArrow: '⇵',\n  DownBreve: '̑',\n  DownLeftRightVector: '⥐',\n  DownLeftTeeVector: '⥞',\n  DownLeftVector: '↽',\n  DownLeftVectorBar: '⥖',\n  DownRightTeeVector: '⥟',\n  DownRightVector: '⇁',\n  DownRightVectorBar: '⥗',\n  DownTee: '⊤',\n  DownTeeArrow: '↧',\n  Downarrow: '⇓',\n  Dscr: '𝒟',\n  Dstrok: 'Đ',\n  ENG: 'Ŋ',\n  ET: 'Ð',\n  ETH: 'Ð',\n  Eacut: 'É',\n  Eacute: 'É',\n  Ecaron: 'Ě',\n  Ecir: 'Ê',\n  Ecirc: 'Ê',\n  Ecy: 'Э',\n  Edot: 'Ė',\n  Efr: '𝔈',\n  Egrav: 'È',\n  Egrave: 'È',\n  Element: '∈',\n  Emacr: 'Ē',\n  EmptySmallSquare: '◻',\n  EmptyVerySmallSquare: '▫',\n  Eogon: 'Ę',\n  Eopf: '𝔼',\n  Epsilon: 'Ε',\n  Equal: '⩵',\n  EqualTilde: '≂',\n  Equilibrium: '⇌',\n  Escr: 'ℰ',\n  Esim: '⩳',\n  Eta: 'Η',\n  Eum: 'Ë',\n  Euml: 'Ë',\n  Exists: '∃',\n  ExponentialE: 'ⅇ',\n  Fcy: 'Ф',\n  Ffr: '𝔉',\n  FilledSmallSquare: '◼',\n  FilledVerySmallSquare: '▪',\n  Fopf: '𝔽',\n  ForAll: '∀',\n  Fouriertrf: 'ℱ',\n  Fscr: 'ℱ',\n  GJcy: 'Ѓ',\n  G: '>',\n  GT: '>',\n  Gamma: 'Γ',\n  Gammad: 'Ϝ',\n  Gbreve: 'Ğ',\n  Gcedil: 'Ģ',\n  Gcirc: 'Ĝ',\n  Gcy: 'Г',\n  Gdot: 'Ġ',\n  Gfr: '𝔊',\n  Gg: '⋙',\n  Gopf: '𝔾',\n  GreaterEqual: '≥',\n  GreaterEqualLess: '⋛',\n  GreaterFullEqual: '≧',\n  GreaterGreater: '⪢',\n  GreaterLess: '≷',\n  GreaterSlantEqual: '⩾',\n  GreaterTilde: '≳',\n  Gscr: '𝒢',\n  Gt: '≫',\n  HARDcy: 'Ъ',\n  Hacek: 'ˇ',\n  Hat: '^',\n  Hcirc: 'Ĥ',\n  Hfr: 'ℌ',\n  HilbertSpace: 'ℋ',\n  Hopf: 'ℍ',\n  HorizontalLine: '─',\n  Hscr: 'ℋ',\n  Hstrok: 'Ħ',\n  HumpDownHump: '≎',\n  HumpEqual: '≏',\n  IEcy: 'Е',\n  IJlig: 'Ĳ',\n  IOcy: 'Ё',\n  Iacut: 'Í',\n  Iacute: 'Í',\n  Icir: 'Î',\n  Icirc: 'Î',\n  Icy: 'И',\n  Idot: 'İ',\n  Ifr: 'ℑ',\n  Igrav: 'Ì',\n  Igrave: 'Ì',\n  Im: 'ℑ',\n  Imacr: 'Ī',\n  ImaginaryI: 'ⅈ',\n  Implies: '⇒',\n  Int: '∬',\n  Integral: '∫',\n  Intersection: '⋂',\n  InvisibleComma: '⁣',\n  InvisibleTimes: '⁢',\n  Iogon: 'Į',\n  Iopf: '𝕀',\n  Iota: 'Ι',\n  Iscr: 'ℐ',\n  Itilde: 'Ĩ',\n  Iukcy: 'І',\n  Ium: 'Ï',\n  Iuml: 'Ï',\n  Jcirc: 'Ĵ',\n  Jcy: 'Й',\n  Jfr: '𝔍',\n  Jopf: '𝕁',\n  Jscr: '𝒥',\n  Jsercy: 'Ј',\n  Jukcy: 'Є',\n  KHcy: 'Х',\n  KJcy: 'Ќ',\n  Kappa: 'Κ',\n  Kcedil: 'Ķ',\n  Kcy: 'К',\n  Kfr: '𝔎',\n  Kopf: '𝕂',\n  Kscr: '𝒦',\n  LJcy: 'Љ',\n  L: '<',\n  LT: '<',\n  Lacute: 'Ĺ',\n  Lambda: 'Λ',\n  Lang: '⟪',\n  Laplacetrf: 'ℒ',\n  Larr: '↞',\n  Lcaron: 'Ľ',\n  Lcedil: 'Ļ',\n  Lcy: 'Л',\n  LeftAngleBracket: '⟨',\n  LeftArrow: '←',\n  LeftArrowBar: '⇤',\n  LeftArrowRightArrow: '⇆',\n  LeftCeiling: '⌈',\n  LeftDoubleBracket: '⟦',\n  LeftDownTeeVector: '⥡',\n  LeftDownVector: '⇃',\n  LeftDownVectorBar: '⥙',\n  LeftFloor: '⌊',\n  LeftRightArrow: '↔',\n  LeftRightVector: '⥎',\n  LeftTee: '⊣',\n  LeftTeeArrow: '↤',\n  LeftTeeVector: '⥚',\n  LeftTriangle: '⊲',\n  LeftTriangleBar: '⧏',\n  LeftTriangleEqual: '⊴',\n  LeftUpDownVector: '⥑',\n  LeftUpTeeVector: '⥠',\n  LeftUpVector: '↿',\n  LeftUpVectorBar: '⥘',\n  LeftVector: '↼',\n  LeftVectorBar: '⥒',\n  Leftarrow: '⇐',\n  Leftrightarrow: '⇔',\n  LessEqualGreater: '⋚',\n  LessFullEqual: '≦',\n  LessGreater: '≶',\n  LessLess: '⪡',\n  LessSlantEqual: '⩽',\n  LessTilde: '≲',\n  Lfr: '𝔏',\n  Ll: '⋘',\n  Lleftarrow: '⇚',\n  Lmidot: 'Ŀ',\n  LongLeftArrow: '⟵',\n  LongLeftRightArrow: '⟷',\n  LongRightArrow: '⟶',\n  Longleftarrow: '⟸',\n  Longleftrightarrow: '⟺',\n  Longrightarrow: '⟹',\n  Lopf: '𝕃',\n  LowerLeftArrow: '↙',\n  LowerRightArrow: '↘',\n  Lscr: 'ℒ',\n  Lsh: '↰',\n  Lstrok: 'Ł',\n  Lt: '≪',\n  Map: '⤅',\n  Mcy: 'М',\n  MediumSpace: ' ',\n  Mellintrf: 'ℳ',\n  Mfr: '𝔐',\n  MinusPlus: '∓',\n  Mopf: '𝕄',\n  Mscr: 'ℳ',\n  Mu: 'Μ',\n  NJcy: 'Њ',\n  Nacute: 'Ń',\n  Ncaron: 'Ň',\n  Ncedil: 'Ņ',\n  Ncy: 'Н',\n  NegativeMediumSpace: '​',\n  NegativeThickSpace: '​',\n  NegativeThinSpace: '​',\n  NegativeVeryThinSpace: '​',\n  NestedGreaterGreater: '≫',\n  NestedLessLess: '≪',\n  NewLine: '\\n',\n  Nfr: '𝔑',\n  NoBreak: '⁠',\n  NonBreakingSpace: ' ',\n  Nopf: 'ℕ',\n  Not: '⫬',\n  NotCongruent: '≢',\n  NotCupCap: '≭',\n  NotDoubleVerticalBar: '∦',\n  NotElement: '∉',\n  NotEqual: '≠',\n  NotEqualTilde: '≂̸',\n  NotExists: '∄',\n  NotGreater: '≯',\n  NotGreaterEqual: '≱',\n  NotGreaterFullEqual: '≧̸',\n  NotGreaterGreater: '≫̸',\n  NotGreaterLess: '≹',\n  NotGreaterSlantEqual: '⩾̸',\n  NotGreaterTilde: '≵',\n  NotHumpDownHump: '≎̸',\n  NotHumpEqual: '≏̸',\n  NotLeftTriangle: '⋪',\n  NotLeftTriangleBar: '⧏̸',\n  NotLeftTriangleEqual: '⋬',\n  NotLess: '≮',\n  NotLessEqual: '≰',\n  NotLessGreater: '≸',\n  NotLessLess: '≪̸',\n  NotLessSlantEqual: '⩽̸',\n  NotLessTilde: '≴',\n  NotNestedGreaterGreater: '⪢̸',\n  NotNestedLessLess: '⪡̸',\n  NotPrecedes: '⊀',\n  NotPrecedesEqual: '⪯̸',\n  NotPrecedesSlantEqual: '⋠',\n  NotReverseElement: '∌',\n  NotRightTriangle: '⋫',\n  NotRightTriangleBar: '⧐̸',\n  NotRightTriangleEqual: '⋭',\n  NotSquareSubset: '⊏̸',\n  NotSquareSubsetEqual: '⋢',\n  NotSquareSuperset: '⊐̸',\n  NotSquareSupersetEqual: '⋣',\n  NotSubset: '⊂⃒',\n  NotSubsetEqual: '⊈',\n  NotSucceeds: '⊁',\n  NotSucceedsEqual: '⪰̸',\n  NotSucceedsSlantEqual: '⋡',\n  NotSucceedsTilde: '≿̸',\n  NotSuperset: '⊃⃒',\n  NotSupersetEqual: '⊉',\n  NotTilde: '≁',\n  NotTildeEqual: '≄',\n  NotTildeFullEqual: '≇',\n  NotTildeTilde: '≉',\n  NotVerticalBar: '∤',\n  Nscr: '𝒩',\n  Ntild: 'Ñ',\n  Ntilde: 'Ñ',\n  Nu: 'Ν',\n  OElig: 'Œ',\n  Oacut: 'Ó',\n  Oacute: 'Ó',\n  Ocir: 'Ô',\n  Ocirc: 'Ô',\n  Ocy: 'О',\n  Odblac: 'Ő',\n  Ofr: '𝔒',\n  Ograv: 'Ò',\n  Ograve: 'Ò',\n  Omacr: 'Ō',\n  Omega: 'Ω',\n  Omicron: 'Ο',\n  Oopf: '𝕆',\n  OpenCurlyDoubleQuote: '“',\n  OpenCurlyQuote: '‘',\n  Or: '⩔',\n  Oscr: '𝒪',\n  Oslas: 'Ø',\n  Oslash: 'Ø',\n  Otild: 'Õ',\n  Otilde: 'Õ',\n  Otimes: '⨷',\n  Oum: 'Ö',\n  Ouml: 'Ö',\n  OverBar: '‾',\n  OverBrace: '⏞',\n  OverBracket: '⎴',\n  OverParenthesis: '⏜',\n  PartialD: '∂',\n  Pcy: 'П',\n  Pfr: '𝔓',\n  Phi: 'Φ',\n  Pi: 'Π',\n  PlusMinus: '±',\n  Poincareplane: 'ℌ',\n  Popf: 'ℙ',\n  Pr: '⪻',\n  Precedes: '≺',\n  PrecedesEqual: '⪯',\n  PrecedesSlantEqual: '≼',\n  PrecedesTilde: '≾',\n  Prime: '″',\n  Product: '∏',\n  Proportion: '∷',\n  Proportional: '∝',\n  Pscr: '𝒫',\n  Psi: 'Ψ',\n  QUO: '\"',\n  QUOT: '\"',\n  Qfr: '𝔔',\n  Qopf: 'ℚ',\n  Qscr: '𝒬',\n  RBarr: '⤐',\n  RE: '®',\n  REG: '®',\n  Racute: 'Ŕ',\n  Rang: '⟫',\n  Rarr: '↠',\n  Rarrtl: '⤖',\n  Rcaron: 'Ř',\n  Rcedil: 'Ŗ',\n  Rcy: 'Р',\n  Re: 'ℜ',\n  ReverseElement: '∋',\n  ReverseEquilibrium: '⇋',\n  ReverseUpEquilibrium: '⥯',\n  Rfr: 'ℜ',\n  Rho: 'Ρ',\n  RightAngleBracket: '⟩',\n  RightArrow: '→',\n  RightArrowBar: '⇥',\n  RightArrowLeftArrow: '⇄',\n  RightCeiling: '⌉',\n  RightDoubleBracket: '⟧',\n  RightDownTeeVector: '⥝',\n  RightDownVector: '⇂',\n  RightDownVectorBar: '⥕',\n  RightFloor: '⌋',\n  RightTee: '⊢',\n  RightTeeArrow: '↦',\n  RightTeeVector: '⥛',\n  RightTriangle: '⊳',\n  RightTriangleBar: '⧐',\n  RightTriangleEqual: '⊵',\n  RightUpDownVector: '⥏',\n  RightUpTeeVector: '⥜',\n  RightUpVector: '↾',\n  RightUpVectorBar: '⥔',\n  RightVector: '⇀',\n  RightVectorBar: '⥓',\n  Rightarrow: '⇒',\n  Ropf: 'ℝ',\n  RoundImplies: '⥰',\n  Rrightarrow: '⇛',\n  Rscr: 'ℛ',\n  Rsh: '↱',\n  RuleDelayed: '⧴',\n  SHCHcy: 'Щ',\n  SHcy: 'Ш',\n  SOFTcy: 'Ь',\n  Sacute: 'Ś',\n  Sc: '⪼',\n  Scaron: 'Š',\n  Scedil: 'Ş',\n  Scirc: 'Ŝ',\n  Scy: 'С',\n  Sfr: '𝔖',\n  ShortDownArrow: '↓',\n  ShortLeftArrow: '←',\n  ShortRightArrow: '→',\n  ShortUpArrow: '↑',\n  Sigma: 'Σ',\n  SmallCircle: '∘',\n  Sopf: '𝕊',\n  Sqrt: '√',\n  Square: '□',\n  SquareIntersection: '⊓',\n  SquareSubset: '⊏',\n  SquareSubsetEqual: '⊑',\n  SquareSuperset: '⊐',\n  SquareSupersetEqual: '⊒',\n  SquareUnion: '⊔',\n  Sscr: '𝒮',\n  Star: '⋆',\n  Sub: '⋐',\n  Subset: '⋐',\n  SubsetEqual: '⊆',\n  Succeeds: '≻',\n  SucceedsEqual: '⪰',\n  SucceedsSlantEqual: '≽',\n  SucceedsTilde: '≿',\n  SuchThat: '∋',\n  Sum: '∑',\n  Sup: '⋑',\n  Superset: '⊃',\n  SupersetEqual: '⊇',\n  Supset: '⋑',\n  THOR: 'Þ',\n  THORN: 'Þ',\n  TRADE: '™',\n  TSHcy: 'Ћ',\n  TScy: 'Ц',\n  Tab: '\\t',\n  Tau: 'Τ',\n  Tcaron: 'Ť',\n  Tcedil: 'Ţ',\n  Tcy: 'Т',\n  Tfr: '𝔗',\n  Therefore: '∴',\n  Theta: 'Θ',\n  ThickSpace: '  ',\n  ThinSpace: ' ',\n  Tilde: '∼',\n  TildeEqual: '≃',\n  TildeFullEqual: '≅',\n  TildeTilde: '≈',\n  Topf: '𝕋',\n  TripleDot: '⃛',\n  Tscr: '𝒯',\n  Tstrok: 'Ŧ',\n  Uacut: 'Ú',\n  Uacute: 'Ú',\n  Uarr: '↟',\n  Uarrocir: '⥉',\n  Ubrcy: 'Ў',\n  Ubreve: 'Ŭ',\n  Ucir: 'Û',\n  Ucirc: 'Û',\n  Ucy: 'У',\n  Udblac: 'Ű',\n  Ufr: '𝔘',\n  Ugrav: 'Ù',\n  Ugrave: 'Ù',\n  Umacr: 'Ū',\n  UnderBar: '_',\n  UnderBrace: '⏟',\n  UnderBracket: '⎵',\n  UnderParenthesis: '⏝',\n  Union: '⋃',\n  UnionPlus: '⊎',\n  Uogon: 'Ų',\n  Uopf: '𝕌',\n  UpArrow: '↑',\n  UpArrowBar: '⤒',\n  UpArrowDownArrow: '⇅',\n  UpDownArrow: '↕',\n  UpEquilibrium: '⥮',\n  UpTee: '⊥',\n  UpTeeArrow: '↥',\n  Uparrow: '⇑',\n  Updownarrow: '⇕',\n  UpperLeftArrow: '↖',\n  UpperRightArrow: '↗',\n  Upsi: 'ϒ',\n  Upsilon: 'Υ',\n  Uring: 'Ů',\n  Uscr: '𝒰',\n  Utilde: 'Ũ',\n  Uum: 'Ü',\n  Uuml: 'Ü',\n  VDash: '⊫',\n  Vbar: '⫫',\n  Vcy: 'В',\n  Vdash: '⊩',\n  Vdashl: '⫦',\n  Vee: '⋁',\n  Verbar: '‖',\n  Vert: '‖',\n  VerticalBar: '∣',\n  VerticalLine: '|',\n  VerticalSeparator: '❘',\n  VerticalTilde: '≀',\n  VeryThinSpace: ' ',\n  Vfr: '𝔙',\n  Vopf: '𝕍',\n  Vscr: '𝒱',\n  Vvdash: '⊪',\n  Wcirc: 'Ŵ',\n  Wedge: '⋀',\n  Wfr: '𝔚',\n  Wopf: '𝕎',\n  Wscr: '𝒲',\n  Xfr: '𝔛',\n  Xi: 'Ξ',\n  Xopf: '𝕏',\n  Xscr: '𝒳',\n  YAcy: 'Я',\n  YIcy: 'Ї',\n  YUcy: 'Ю',\n  Yacut: 'Ý',\n  Yacute: 'Ý',\n  Ycirc: 'Ŷ',\n  Ycy: 'Ы',\n  Yfr: '𝔜',\n  Yopf: '𝕐',\n  Yscr: '𝒴',\n  Yuml: 'Ÿ',\n  ZHcy: 'Ж',\n  Zacute: 'Ź',\n  Zcaron: 'Ž',\n  Zcy: 'З',\n  Zdot: 'Ż',\n  ZeroWidthSpace: '​',\n  Zeta: 'Ζ',\n  Zfr: 'ℨ',\n  Zopf: 'ℤ',\n  Zscr: '𝒵',\n  aacut: 'á',\n  aacute: 'á',\n  abreve: 'ă',\n  ac: '∾',\n  acE: '∾̳',\n  acd: '∿',\n  acir: 'â',\n  acirc: 'â',\n  acut: '´',\n  acute: '´',\n  acy: 'а',\n  aeli: 'æ',\n  aelig: 'æ',\n  af: '⁡',\n  afr: '𝔞',\n  agrav: 'à',\n  agrave: 'à',\n  alefsym: 'ℵ',\n  aleph: 'ℵ',\n  alpha: 'α',\n  amacr: 'ā',\n  amalg: '⨿',\n  am: '&',\n  amp: '&',\n  and: '∧',\n  andand: '⩕',\n  andd: '⩜',\n  andslope: '⩘',\n  andv: '⩚',\n  ang: '∠',\n  ange: '⦤',\n  angle: '∠',\n  angmsd: '∡',\n  angmsdaa: '⦨',\n  angmsdab: '⦩',\n  angmsdac: '⦪',\n  angmsdad: '⦫',\n  angmsdae: '⦬',\n  angmsdaf: '⦭',\n  angmsdag: '⦮',\n  angmsdah: '⦯',\n  angrt: '∟',\n  angrtvb: '⊾',\n  angrtvbd: '⦝',\n  angsph: '∢',\n  angst: 'Å',\n  angzarr: '⍼',\n  aogon: 'ą',\n  aopf: '𝕒',\n  ap: '≈',\n  apE: '⩰',\n  apacir: '⩯',\n  ape: '≊',\n  apid: '≋',\n  apos: \"'\",\n  approx: '≈',\n  approxeq: '≊',\n  arin: 'å',\n  aring: 'å',\n  ascr: '𝒶',\n  ast: '*',\n  asymp: '≈',\n  asympeq: '≍',\n  atild: 'ã',\n  atilde: 'ã',\n  aum: 'ä',\n  auml: 'ä',\n  awconint: '∳',\n  awint: '⨑',\n  bNot: '⫭',\n  backcong: '≌',\n  backepsilon: '϶',\n  backprime: '‵',\n  backsim: '∽',\n  backsimeq: '⋍',\n  barvee: '⊽',\n  barwed: '⌅',\n  barwedge: '⌅',\n  bbrk: '⎵',\n  bbrktbrk: '⎶',\n  bcong: '≌',\n  bcy: 'б',\n  bdquo: '„',\n  becaus: '∵',\n  because: '∵',\n  bemptyv: '⦰',\n  bepsi: '϶',\n  bernou: 'ℬ',\n  beta: 'β',\n  beth: 'ℶ',\n  between: '≬',\n  bfr: '𝔟',\n  bigcap: '⋂',\n  bigcirc: '◯',\n  bigcup: '⋃',\n  bigodot: '⨀',\n  bigoplus: '⨁',\n  bigotimes: '⨂',\n  bigsqcup: '⨆',\n  bigstar: '★',\n  bigtriangledown: '▽',\n  bigtriangleup: '△',\n  biguplus: '⨄',\n  bigvee: '⋁',\n  bigwedge: '⋀',\n  bkarow: '⤍',\n  blacklozenge: '⧫',\n  blacksquare: '▪',\n  blacktriangle: '▴',\n  blacktriangledown: '▾',\n  blacktriangleleft: '◂',\n  blacktriangleright: '▸',\n  blank: '␣',\n  blk12: '▒',\n  blk14: '░',\n  blk34: '▓',\n  block: '█',\n  bne: '=⃥',\n  bnequiv: '≡⃥',\n  bnot: '⌐',\n  bopf: '𝕓',\n  bot: '⊥',\n  bottom: '⊥',\n  bowtie: '⋈',\n  boxDL: '╗',\n  boxDR: '╔',\n  boxDl: '╖',\n  boxDr: '╓',\n  boxH: '═',\n  boxHD: '╦',\n  boxHU: '╩',\n  boxHd: '╤',\n  boxHu: '╧',\n  boxUL: '╝',\n  boxUR: '╚',\n  boxUl: '╜',\n  boxUr: '╙',\n  boxV: '║',\n  boxVH: '╬',\n  boxVL: '╣',\n  boxVR: '╠',\n  boxVh: '╫',\n  boxVl: '╢',\n  boxVr: '╟',\n  boxbox: '⧉',\n  boxdL: '╕',\n  boxdR: '╒',\n  boxdl: '┐',\n  boxdr: '┌',\n  boxh: '─',\n  boxhD: '╥',\n  boxhU: '╨',\n  boxhd: '┬',\n  boxhu: '┴',\n  boxminus: '⊟',\n  boxplus: '⊞',\n  boxtimes: '⊠',\n  boxuL: '╛',\n  boxuR: '╘',\n  boxul: '┘',\n  boxur: '└',\n  boxv: '│',\n  boxvH: '╪',\n  boxvL: '╡',\n  boxvR: '╞',\n  boxvh: '┼',\n  boxvl: '┤',\n  boxvr: '├',\n  bprime: '‵',\n  breve: '˘',\n  brvba: '¦',\n  brvbar: '¦',\n  bscr: '𝒷',\n  bsemi: '⁏',\n  bsim: '∽',\n  bsime: '⋍',\n  bsol: '\\\\',\n  bsolb: '⧅',\n  bsolhsub: '⟈',\n  bull: '•',\n  bullet: '•',\n  bump: '≎',\n  bumpE: '⪮',\n  bumpe: '≏',\n  bumpeq: '≏',\n  cacute: 'ć',\n  cap: '∩',\n  capand: '⩄',\n  capbrcup: '⩉',\n  capcap: '⩋',\n  capcup: '⩇',\n  capdot: '⩀',\n  caps: '∩︀',\n  caret: '⁁',\n  caron: 'ˇ',\n  ccaps: '⩍',\n  ccaron: 'č',\n  ccedi: 'ç',\n  ccedil: 'ç',\n  ccirc: 'ĉ',\n  ccups: '⩌',\n  ccupssm: '⩐',\n  cdot: 'ċ',\n  cedi: '¸',\n  cedil: '¸',\n  cemptyv: '⦲',\n  cen: '¢',\n  cent: '¢',\n  centerdot: '·',\n  cfr: '𝔠',\n  chcy: 'ч',\n  check: '✓',\n  checkmark: '✓',\n  chi: 'χ',\n  cir: '○',\n  cirE: '⧃',\n  circ: 'ˆ',\n  circeq: '≗',\n  circlearrowleft: '↺',\n  circlearrowright: '↻',\n  circledR: '®',\n  circledS: 'Ⓢ',\n  circledast: '⊛',\n  circledcirc: '⊚',\n  circleddash: '⊝',\n  cire: '≗',\n  cirfnint: '⨐',\n  cirmid: '⫯',\n  cirscir: '⧂',\n  clubs: '♣',\n  clubsuit: '♣',\n  colon: ':',\n  colone: '≔',\n  coloneq: '≔',\n  comma: ',',\n  commat: '@',\n  comp: '∁',\n  compfn: '∘',\n  complement: '∁',\n  complexes: 'ℂ',\n  cong: '≅',\n  congdot: '⩭',\n  conint: '∮',\n  copf: '𝕔',\n  coprod: '∐',\n  cop: '©',\n  copy: '©',\n  copysr: '℗',\n  crarr: '↵',\n  cross: '✗',\n  cscr: '𝒸',\n  csub: '⫏',\n  csube: '⫑',\n  csup: '⫐',\n  csupe: '⫒',\n  ctdot: '⋯',\n  cudarrl: '⤸',\n  cudarrr: '⤵',\n  cuepr: '⋞',\n  cuesc: '⋟',\n  cularr: '↶',\n  cularrp: '⤽',\n  cup: '∪',\n  cupbrcap: '⩈',\n  cupcap: '⩆',\n  cupcup: '⩊',\n  cupdot: '⊍',\n  cupor: '⩅',\n  cups: '∪︀',\n  curarr: '↷',\n  curarrm: '⤼',\n  curlyeqprec: '⋞',\n  curlyeqsucc: '⋟',\n  curlyvee: '⋎',\n  curlywedge: '⋏',\n  curre: '¤',\n  curren: '¤',\n  curvearrowleft: '↶',\n  curvearrowright: '↷',\n  cuvee: '⋎',\n  cuwed: '⋏',\n  cwconint: '∲',\n  cwint: '∱',\n  cylcty: '⌭',\n  dArr: '⇓',\n  dHar: '⥥',\n  dagger: '†',\n  daleth: 'ℸ',\n  darr: '↓',\n  dash: '‐',\n  dashv: '⊣',\n  dbkarow: '⤏',\n  dblac: '˝',\n  dcaron: 'ď',\n  dcy: 'д',\n  dd: 'ⅆ',\n  ddagger: '‡',\n  ddarr: '⇊',\n  ddotseq: '⩷',\n  de: '°',\n  deg: '°',\n  delta: 'δ',\n  demptyv: '⦱',\n  dfisht: '⥿',\n  dfr: '𝔡',\n  dharl: '⇃',\n  dharr: '⇂',\n  diam: '⋄',\n  diamond: '⋄',\n  diamondsuit: '♦',\n  diams: '♦',\n  die: '¨',\n  digamma: 'ϝ',\n  disin: '⋲',\n  div: '÷',\n  divid: '÷',\n  divide: '÷',\n  divideontimes: '⋇',\n  divonx: '⋇',\n  djcy: 'ђ',\n  dlcorn: '⌞',\n  dlcrop: '⌍',\n  dollar: '$',\n  dopf: '𝕕',\n  dot: '˙',\n  doteq: '≐',\n  doteqdot: '≑',\n  dotminus: '∸',\n  dotplus: '∔',\n  dotsquare: '⊡',\n  doublebarwedge: '⌆',\n  downarrow: '↓',\n  downdownarrows: '⇊',\n  downharpoonleft: '⇃',\n  downharpoonright: '⇂',\n  drbkarow: '⤐',\n  drcorn: '⌟',\n  drcrop: '⌌',\n  dscr: '𝒹',\n  dscy: 'ѕ',\n  dsol: '⧶',\n  dstrok: 'đ',\n  dtdot: '⋱',\n  dtri: '▿',\n  dtrif: '▾',\n  duarr: '⇵',\n  duhar: '⥯',\n  dwangle: '⦦',\n  dzcy: 'џ',\n  dzigrarr: '⟿',\n  eDDot: '⩷',\n  eDot: '≑',\n  eacut: 'é',\n  eacute: 'é',\n  easter: '⩮',\n  ecaron: 'ě',\n  ecir: 'ê',\n  ecirc: 'ê',\n  ecolon: '≕',\n  ecy: 'э',\n  edot: 'ė',\n  ee: 'ⅇ',\n  efDot: '≒',\n  efr: '𝔢',\n  eg: '⪚',\n  egrav: 'è',\n  egrave: 'è',\n  egs: '⪖',\n  egsdot: '⪘',\n  el: '⪙',\n  elinters: '⏧',\n  ell: 'ℓ',\n  els: '⪕',\n  elsdot: '⪗',\n  emacr: 'ē',\n  empty: '∅',\n  emptyset: '∅',\n  emptyv: '∅',\n  emsp13: ' ',\n  emsp14: ' ',\n  emsp: ' ',\n  eng: 'ŋ',\n  ensp: ' ',\n  eogon: 'ę',\n  eopf: '𝕖',\n  epar: '⋕',\n  eparsl: '⧣',\n  eplus: '⩱',\n  epsi: 'ε',\n  epsilon: 'ε',\n  epsiv: 'ϵ',\n  eqcirc: '≖',\n  eqcolon: '≕',\n  eqsim: '≂',\n  eqslantgtr: '⪖',\n  eqslantless: '⪕',\n  equals: '=',\n  equest: '≟',\n  equiv: '≡',\n  equivDD: '⩸',\n  eqvparsl: '⧥',\n  erDot: '≓',\n  erarr: '⥱',\n  escr: 'ℯ',\n  esdot: '≐',\n  esim: '≂',\n  eta: 'η',\n  et: 'ð',\n  eth: 'ð',\n  eum: 'ë',\n  euml: 'ë',\n  euro: '€',\n  excl: '!',\n  exist: '∃',\n  expectation: 'ℰ',\n  exponentiale: 'ⅇ',\n  fallingdotseq: '≒',\n  fcy: 'ф',\n  female: '♀',\n  ffilig: 'ﬃ',\n  fflig: 'ﬀ',\n  ffllig: 'ﬄ',\n  ffr: '𝔣',\n  filig: 'ﬁ',\n  fjlig: 'fj',\n  flat: '♭',\n  fllig: 'ﬂ',\n  fltns: '▱',\n  fnof: 'ƒ',\n  fopf: '𝕗',\n  forall: '∀',\n  fork: '⋔',\n  forkv: '⫙',\n  fpartint: '⨍',\n  frac1: '¼',\n  frac12: '½',\n  frac13: '⅓',\n  frac14: '¼',\n  frac15: '⅕',\n  frac16: '⅙',\n  frac18: '⅛',\n  frac23: '⅔',\n  frac25: '⅖',\n  frac3: '¾',\n  frac34: '¾',\n  frac35: '⅗',\n  frac38: '⅜',\n  frac45: '⅘',\n  frac56: '⅚',\n  frac58: '⅝',\n  frac78: '⅞',\n  frasl: '⁄',\n  frown: '⌢',\n  fscr: '𝒻',\n  gE: '≧',\n  gEl: '⪌',\n  gacute: 'ǵ',\n  gamma: 'γ',\n  gammad: 'ϝ',\n  gap: '⪆',\n  gbreve: 'ğ',\n  gcirc: 'ĝ',\n  gcy: 'г',\n  gdot: 'ġ',\n  ge: '≥',\n  gel: '⋛',\n  geq: '≥',\n  geqq: '≧',\n  geqslant: '⩾',\n  ges: '⩾',\n  gescc: '⪩',\n  gesdot: '⪀',\n  gesdoto: '⪂',\n  gesdotol: '⪄',\n  gesl: '⋛︀',\n  gesles: '⪔',\n  gfr: '𝔤',\n  gg: '≫',\n  ggg: '⋙',\n  gimel: 'ℷ',\n  gjcy: 'ѓ',\n  gl: '≷',\n  glE: '⪒',\n  gla: '⪥',\n  glj: '⪤',\n  gnE: '≩',\n  gnap: '⪊',\n  gnapprox: '⪊',\n  gne: '⪈',\n  gneq: '⪈',\n  gneqq: '≩',\n  gnsim: '⋧',\n  gopf: '𝕘',\n  grave: '`',\n  gscr: 'ℊ',\n  gsim: '≳',\n  gsime: '⪎',\n  gsiml: '⪐',\n  g: '>',\n  gt: '>',\n  gtcc: '⪧',\n  gtcir: '⩺',\n  gtdot: '⋗',\n  gtlPar: '⦕',\n  gtquest: '⩼',\n  gtrapprox: '⪆',\n  gtrarr: '⥸',\n  gtrdot: '⋗',\n  gtreqless: '⋛',\n  gtreqqless: '⪌',\n  gtrless: '≷',\n  gtrsim: '≳',\n  gvertneqq: '≩︀',\n  gvnE: '≩︀',\n  hArr: '⇔',\n  hairsp: ' ',\n  half: '½',\n  hamilt: 'ℋ',\n  hardcy: 'ъ',\n  harr: '↔',\n  harrcir: '⥈',\n  harrw: '↭',\n  hbar: 'ℏ',\n  hcirc: 'ĥ',\n  hearts: '♥',\n  heartsuit: '♥',\n  hellip: '…',\n  hercon: '⊹',\n  hfr: '𝔥',\n  hksearow: '⤥',\n  hkswarow: '⤦',\n  hoarr: '⇿',\n  homtht: '∻',\n  hookleftarrow: '↩',\n  hookrightarrow: '↪',\n  hopf: '𝕙',\n  horbar: '―',\n  hscr: '𝒽',\n  hslash: 'ℏ',\n  hstrok: 'ħ',\n  hybull: '⁃',\n  hyphen: '‐',\n  iacut: 'í',\n  iacute: 'í',\n  ic: '⁣',\n  icir: 'î',\n  icirc: 'î',\n  icy: 'и',\n  iecy: 'е',\n  iexc: '¡',\n  iexcl: '¡',\n  iff: '⇔',\n  ifr: '𝔦',\n  igrav: 'ì',\n  igrave: 'ì',\n  ii: 'ⅈ',\n  iiiint: '⨌',\n  iiint: '∭',\n  iinfin: '⧜',\n  iiota: '℩',\n  ijlig: 'ĳ',\n  imacr: 'ī',\n  image: 'ℑ',\n  imagline: 'ℐ',\n  imagpart: 'ℑ',\n  imath: 'ı',\n  imof: '⊷',\n  imped: 'Ƶ',\n  in: '∈',\n  incare: '℅',\n  infin: '∞',\n  infintie: '⧝',\n  inodot: 'ı',\n  int: '∫',\n  intcal: '⊺',\n  integers: 'ℤ',\n  intercal: '⊺',\n  intlarhk: '⨗',\n  intprod: '⨼',\n  iocy: 'ё',\n  iogon: 'į',\n  iopf: '𝕚',\n  iota: 'ι',\n  iprod: '⨼',\n  iques: '¿',\n  iquest: '¿',\n  iscr: '𝒾',\n  isin: '∈',\n  isinE: '⋹',\n  isindot: '⋵',\n  isins: '⋴',\n  isinsv: '⋳',\n  isinv: '∈',\n  it: '⁢',\n  itilde: 'ĩ',\n  iukcy: 'і',\n  ium: 'ï',\n  iuml: 'ï',\n  jcirc: 'ĵ',\n  jcy: 'й',\n  jfr: '𝔧',\n  jmath: 'ȷ',\n  jopf: '𝕛',\n  jscr: '𝒿',\n  jsercy: 'ј',\n  jukcy: 'є',\n  kappa: 'κ',\n  kappav: 'ϰ',\n  kcedil: 'ķ',\n  kcy: 'к',\n  kfr: '𝔨',\n  kgreen: 'ĸ',\n  khcy: 'х',\n  kjcy: 'ќ',\n  kopf: '𝕜',\n  kscr: '𝓀',\n  lAarr: '⇚',\n  lArr: '⇐',\n  lAtail: '⤛',\n  lBarr: '⤎',\n  lE: '≦',\n  lEg: '⪋',\n  lHar: '⥢',\n  lacute: 'ĺ',\n  laemptyv: '⦴',\n  lagran: 'ℒ',\n  lambda: 'λ',\n  lang: '⟨',\n  langd: '⦑',\n  langle: '⟨',\n  lap: '⪅',\n  laqu: '«',\n  laquo: '«',\n  larr: '←',\n  larrb: '⇤',\n  larrbfs: '⤟',\n  larrfs: '⤝',\n  larrhk: '↩',\n  larrlp: '↫',\n  larrpl: '⤹',\n  larrsim: '⥳',\n  larrtl: '↢',\n  lat: '⪫',\n  latail: '⤙',\n  late: '⪭',\n  lates: '⪭︀',\n  lbarr: '⤌',\n  lbbrk: '❲',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '⦋',\n  lbrksld: '⦏',\n  lbrkslu: '⦍',\n  lcaron: 'ľ',\n  lcedil: 'ļ',\n  lceil: '⌈',\n  lcub: '{',\n  lcy: 'л',\n  ldca: '⤶',\n  ldquo: '“',\n  ldquor: '„',\n  ldrdhar: '⥧',\n  ldrushar: '⥋',\n  ldsh: '↲',\n  le: '≤',\n  leftarrow: '←',\n  leftarrowtail: '↢',\n  leftharpoondown: '↽',\n  leftharpoonup: '↼',\n  leftleftarrows: '⇇',\n  leftrightarrow: '↔',\n  leftrightarrows: '⇆',\n  leftrightharpoons: '⇋',\n  leftrightsquigarrow: '↭',\n  leftthreetimes: '⋋',\n  leg: '⋚',\n  leq: '≤',\n  leqq: '≦',\n  leqslant: '⩽',\n  les: '⩽',\n  lescc: '⪨',\n  lesdot: '⩿',\n  lesdoto: '⪁',\n  lesdotor: '⪃',\n  lesg: '⋚︀',\n  lesges: '⪓',\n  lessapprox: '⪅',\n  lessdot: '⋖',\n  lesseqgtr: '⋚',\n  lesseqqgtr: '⪋',\n  lessgtr: '≶',\n  lesssim: '≲',\n  lfisht: '⥼',\n  lfloor: '⌊',\n  lfr: '𝔩',\n  lg: '≶',\n  lgE: '⪑',\n  lhard: '↽',\n  lharu: '↼',\n  lharul: '⥪',\n  lhblk: '▄',\n  ljcy: 'љ',\n  ll: '≪',\n  llarr: '⇇',\n  llcorner: '⌞',\n  llhard: '⥫',\n  lltri: '◺',\n  lmidot: 'ŀ',\n  lmoust: '⎰',\n  lmoustache: '⎰',\n  lnE: '≨',\n  lnap: '⪉',\n  lnapprox: '⪉',\n  lne: '⪇',\n  lneq: '⪇',\n  lneqq: '≨',\n  lnsim: '⋦',\n  loang: '⟬',\n  loarr: '⇽',\n  lobrk: '⟦',\n  longleftarrow: '⟵',\n  longleftrightarrow: '⟷',\n  longmapsto: '⟼',\n  longrightarrow: '⟶',\n  looparrowleft: '↫',\n  looparrowright: '↬',\n  lopar: '⦅',\n  lopf: '𝕝',\n  loplus: '⨭',\n  lotimes: '⨴',\n  lowast: '∗',\n  lowbar: '_',\n  loz: '◊',\n  lozenge: '◊',\n  lozf: '⧫',\n  lpar: '(',\n  lparlt: '⦓',\n  lrarr: '⇆',\n  lrcorner: '⌟',\n  lrhar: '⇋',\n  lrhard: '⥭',\n  lrm: '‎',\n  lrtri: '⊿',\n  lsaquo: '‹',\n  lscr: '𝓁',\n  lsh: '↰',\n  lsim: '≲',\n  lsime: '⪍',\n  lsimg: '⪏',\n  lsqb: '[',\n  lsquo: '‘',\n  lsquor: '‚',\n  lstrok: 'ł',\n  l: '<',\n  lt: '<',\n  ltcc: '⪦',\n  ltcir: '⩹',\n  ltdot: '⋖',\n  lthree: '⋋',\n  ltimes: '⋉',\n  ltlarr: '⥶',\n  ltquest: '⩻',\n  ltrPar: '⦖',\n  ltri: '◃',\n  ltrie: '⊴',\n  ltrif: '◂',\n  lurdshar: '⥊',\n  luruhar: '⥦',\n  lvertneqq: '≨︀',\n  lvnE: '≨︀',\n  mDDot: '∺',\n  mac: '¯',\n  macr: '¯',\n  male: '♂',\n  malt: '✠',\n  maltese: '✠',\n  map: '↦',\n  mapsto: '↦',\n  mapstodown: '↧',\n  mapstoleft: '↤',\n  mapstoup: '↥',\n  marker: '▮',\n  mcomma: '⨩',\n  mcy: 'м',\n  mdash: '—',\n  measuredangle: '∡',\n  mfr: '𝔪',\n  mho: '℧',\n  micr: 'µ',\n  micro: 'µ',\n  mid: '∣',\n  midast: '*',\n  midcir: '⫰',\n  middo: '·',\n  middot: '·',\n  minus: '−',\n  minusb: '⊟',\n  minusd: '∸',\n  minusdu: '⨪',\n  mlcp: '⫛',\n  mldr: '…',\n  mnplus: '∓',\n  models: '⊧',\n  mopf: '𝕞',\n  mp: '∓',\n  mscr: '𝓂',\n  mstpos: '∾',\n  mu: 'μ',\n  multimap: '⊸',\n  mumap: '⊸',\n  nGg: '⋙̸',\n  nGt: '≫⃒',\n  nGtv: '≫̸',\n  nLeftarrow: '⇍',\n  nLeftrightarrow: '⇎',\n  nLl: '⋘̸',\n  nLt: '≪⃒',\n  nLtv: '≪̸',\n  nRightarrow: '⇏',\n  nVDash: '⊯',\n  nVdash: '⊮',\n  nabla: '∇',\n  nacute: 'ń',\n  nang: '∠⃒',\n  nap: '≉',\n  napE: '⩰̸',\n  napid: '≋̸',\n  napos: 'ŉ',\n  napprox: '≉',\n  natur: '♮',\n  natural: '♮',\n  naturals: 'ℕ',\n  nbs: ' ',\n  nbsp: ' ',\n  nbump: '≎̸',\n  nbumpe: '≏̸',\n  ncap: '⩃',\n  ncaron: 'ň',\n  ncedil: 'ņ',\n  ncong: '≇',\n  ncongdot: '⩭̸',\n  ncup: '⩂',\n  ncy: 'н',\n  ndash: '–',\n  ne: '≠',\n  neArr: '⇗',\n  nearhk: '⤤',\n  nearr: '↗',\n  nearrow: '↗',\n  nedot: '≐̸',\n  nequiv: '≢',\n  nesear: '⤨',\n  nesim: '≂̸',\n  nexist: '∄',\n  nexists: '∄',\n  nfr: '𝔫',\n  ngE: '≧̸',\n  nge: '≱',\n  ngeq: '≱',\n  ngeqq: '≧̸',\n  ngeqslant: '⩾̸',\n  nges: '⩾̸',\n  ngsim: '≵',\n  ngt: '≯',\n  ngtr: '≯',\n  nhArr: '⇎',\n  nharr: '↮',\n  nhpar: '⫲',\n  ni: '∋',\n  nis: '⋼',\n  nisd: '⋺',\n  niv: '∋',\n  njcy: 'њ',\n  nlArr: '⇍',\n  nlE: '≦̸',\n  nlarr: '↚',\n  nldr: '‥',\n  nle: '≰',\n  nleftarrow: '↚',\n  nleftrightarrow: '↮',\n  nleq: '≰',\n  nleqq: '≦̸',\n  nleqslant: '⩽̸',\n  nles: '⩽̸',\n  nless: '≮',\n  nlsim: '≴',\n  nlt: '≮',\n  nltri: '⋪',\n  nltrie: '⋬',\n  nmid: '∤',\n  nopf: '𝕟',\n  no: '¬',\n  not: '¬',\n  notin: '∉',\n  notinE: '⋹̸',\n  notindot: '⋵̸',\n  notinva: '∉',\n  notinvb: '⋷',\n  notinvc: '⋶',\n  notni: '∌',\n  notniva: '∌',\n  notnivb: '⋾',\n  notnivc: '⋽',\n  npar: '∦',\n  nparallel: '∦',\n  nparsl: '⫽⃥',\n  npart: '∂̸',\n  npolint: '⨔',\n  npr: '⊀',\n  nprcue: '⋠',\n  npre: '⪯̸',\n  nprec: '⊀',\n  npreceq: '⪯̸',\n  nrArr: '⇏',\n  nrarr: '↛',\n  nrarrc: '⤳̸',\n  nrarrw: '↝̸',\n  nrightarrow: '↛',\n  nrtri: '⋫',\n  nrtrie: '⋭',\n  nsc: '⊁',\n  nsccue: '⋡',\n  nsce: '⪰̸',\n  nscr: '𝓃',\n  nshortmid: '∤',\n  nshortparallel: '∦',\n  nsim: '≁',\n  nsime: '≄',\n  nsimeq: '≄',\n  nsmid: '∤',\n  nspar: '∦',\n  nsqsube: '⋢',\n  nsqsupe: '⋣',\n  nsub: '⊄',\n  nsubE: '⫅̸',\n  nsube: '⊈',\n  nsubset: '⊂⃒',\n  nsubseteq: '⊈',\n  nsubseteqq: '⫅̸',\n  nsucc: '⊁',\n  nsucceq: '⪰̸',\n  nsup: '⊅',\n  nsupE: '⫆̸',\n  nsupe: '⊉',\n  nsupset: '⊃⃒',\n  nsupseteq: '⊉',\n  nsupseteqq: '⫆̸',\n  ntgl: '≹',\n  ntild: 'ñ',\n  ntilde: 'ñ',\n  ntlg: '≸',\n  ntriangleleft: '⋪',\n  ntrianglelefteq: '⋬',\n  ntriangleright: '⋫',\n  ntrianglerighteq: '⋭',\n  nu: 'ν',\n  num: '#',\n  numero: '№',\n  numsp: ' ',\n  nvDash: '⊭',\n  nvHarr: '⤄',\n  nvap: '≍⃒',\n  nvdash: '⊬',\n  nvge: '≥⃒',\n  nvgt: '>⃒',\n  nvinfin: '⧞',\n  nvlArr: '⤂',\n  nvle: '≤⃒',\n  nvlt: '<⃒',\n  nvltrie: '⊴⃒',\n  nvrArr: '⤃',\n  nvrtrie: '⊵⃒',\n  nvsim: '∼⃒',\n  nwArr: '⇖',\n  nwarhk: '⤣',\n  nwarr: '↖',\n  nwarrow: '↖',\n  nwnear: '⤧',\n  oS: 'Ⓢ',\n  oacut: 'ó',\n  oacute: 'ó',\n  oast: '⊛',\n  ocir: 'ô',\n  ocirc: 'ô',\n  ocy: 'о',\n  odash: '⊝',\n  odblac: 'ő',\n  odiv: '⨸',\n  odot: '⊙',\n  odsold: '⦼',\n  oelig: 'œ',\n  ofcir: '⦿',\n  ofr: '𝔬',\n  ogon: '˛',\n  ograv: 'ò',\n  ograve: 'ò',\n  ogt: '⧁',\n  ohbar: '⦵',\n  ohm: 'Ω',\n  oint: '∮',\n  olarr: '↺',\n  olcir: '⦾',\n  olcross: '⦻',\n  oline: '‾',\n  olt: '⧀',\n  omacr: 'ō',\n  omega: 'ω',\n  omicron: 'ο',\n  omid: '⦶',\n  ominus: '⊖',\n  oopf: '𝕠',\n  opar: '⦷',\n  operp: '⦹',\n  oplus: '⊕',\n  or: '∨',\n  orarr: '↻',\n  ord: 'º',\n  order: 'ℴ',\n  orderof: 'ℴ',\n  ordf: 'ª',\n  ordm: 'º',\n  origof: '⊶',\n  oror: '⩖',\n  orslope: '⩗',\n  orv: '⩛',\n  oscr: 'ℴ',\n  oslas: 'ø',\n  oslash: 'ø',\n  osol: '⊘',\n  otild: 'õ',\n  otilde: 'õ',\n  otimes: '⊗',\n  otimesas: '⨶',\n  oum: 'ö',\n  ouml: 'ö',\n  ovbar: '⌽',\n  par: '¶',\n  para: '¶',\n  parallel: '∥',\n  parsim: '⫳',\n  parsl: '⫽',\n  part: '∂',\n  pcy: 'п',\n  percnt: '%',\n  period: '.',\n  permil: '‰',\n  perp: '⊥',\n  pertenk: '‱',\n  pfr: '𝔭',\n  phi: 'φ',\n  phiv: 'ϕ',\n  phmmat: 'ℳ',\n  phone: '☎',\n  pi: 'π',\n  pitchfork: '⋔',\n  piv: 'ϖ',\n  planck: 'ℏ',\n  planckh: 'ℎ',\n  plankv: 'ℏ',\n  plus: '+',\n  plusacir: '⨣',\n  plusb: '⊞',\n  pluscir: '⨢',\n  plusdo: '∔',\n  plusdu: '⨥',\n  pluse: '⩲',\n  plusm: '±',\n  plusmn: '±',\n  plussim: '⨦',\n  plustwo: '⨧',\n  pm: '±',\n  pointint: '⨕',\n  popf: '𝕡',\n  poun: '£',\n  pound: '£',\n  pr: '≺',\n  prE: '⪳',\n  prap: '⪷',\n  prcue: '≼',\n  pre: '⪯',\n  prec: '≺',\n  precapprox: '⪷',\n  preccurlyeq: '≼',\n  preceq: '⪯',\n  precnapprox: '⪹',\n  precneqq: '⪵',\n  precnsim: '⋨',\n  precsim: '≾',\n  prime: '′',\n  primes: 'ℙ',\n  prnE: '⪵',\n  prnap: '⪹',\n  prnsim: '⋨',\n  prod: '∏',\n  profalar: '⌮',\n  profline: '⌒',\n  profsurf: '⌓',\n  prop: '∝',\n  propto: '∝',\n  prsim: '≾',\n  prurel: '⊰',\n  pscr: '𝓅',\n  psi: 'ψ',\n  puncsp: ' ',\n  qfr: '𝔮',\n  qint: '⨌',\n  qopf: '𝕢',\n  qprime: '⁗',\n  qscr: '𝓆',\n  quaternions: 'ℍ',\n  quatint: '⨖',\n  quest: '?',\n  questeq: '≟',\n  quo: '\"',\n  quot: '\"',\n  rAarr: '⇛',\n  rArr: '⇒',\n  rAtail: '⤜',\n  rBarr: '⤏',\n  rHar: '⥤',\n  race: '∽̱',\n  racute: 'ŕ',\n  radic: '√',\n  raemptyv: '⦳',\n  rang: '⟩',\n  rangd: '⦒',\n  range: '⦥',\n  rangle: '⟩',\n  raqu: '»',\n  raquo: '»',\n  rarr: '→',\n  rarrap: '⥵',\n  rarrb: '⇥',\n  rarrbfs: '⤠',\n  rarrc: '⤳',\n  rarrfs: '⤞',\n  rarrhk: '↪',\n  rarrlp: '↬',\n  rarrpl: '⥅',\n  rarrsim: '⥴',\n  rarrtl: '↣',\n  rarrw: '↝',\n  ratail: '⤚',\n  ratio: '∶',\n  rationals: 'ℚ',\n  rbarr: '⤍',\n  rbbrk: '❳',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '⦌',\n  rbrksld: '⦎',\n  rbrkslu: '⦐',\n  rcaron: 'ř',\n  rcedil: 'ŗ',\n  rceil: '⌉',\n  rcub: '}',\n  rcy: 'р',\n  rdca: '⤷',\n  rdldhar: '⥩',\n  rdquo: '”',\n  rdquor: '”',\n  rdsh: '↳',\n  real: 'ℜ',\n  realine: 'ℛ',\n  realpart: 'ℜ',\n  reals: 'ℝ',\n  rect: '▭',\n  re: '®',\n  reg: '®',\n  rfisht: '⥽',\n  rfloor: '⌋',\n  rfr: '𝔯',\n  rhard: '⇁',\n  rharu: '⇀',\n  rharul: '⥬',\n  rho: 'ρ',\n  rhov: 'ϱ',\n  rightarrow: '→',\n  rightarrowtail: '↣',\n  rightharpoondown: '⇁',\n  rightharpoonup: '⇀',\n  rightleftarrows: '⇄',\n  rightleftharpoons: '⇌',\n  rightrightarrows: '⇉',\n  rightsquigarrow: '↝',\n  rightthreetimes: '⋌',\n  ring: '˚',\n  risingdotseq: '≓',\n  rlarr: '⇄',\n  rlhar: '⇌',\n  rlm: '‏',\n  rmoust: '⎱',\n  rmoustache: '⎱',\n  rnmid: '⫮',\n  roang: '⟭',\n  roarr: '⇾',\n  robrk: '⟧',\n  ropar: '⦆',\n  ropf: '𝕣',\n  roplus: '⨮',\n  rotimes: '⨵',\n  rpar: ')',\n  rpargt: '⦔',\n  rppolint: '⨒',\n  rrarr: '⇉',\n  rsaquo: '›',\n  rscr: '𝓇',\n  rsh: '↱',\n  rsqb: ']',\n  rsquo: '’',\n  rsquor: '’',\n  rthree: '⋌',\n  rtimes: '⋊',\n  rtri: '▹',\n  rtrie: '⊵',\n  rtrif: '▸',\n  rtriltri: '⧎',\n  ruluhar: '⥨',\n  rx: '℞',\n  sacute: 'ś',\n  sbquo: '‚',\n  sc: '≻',\n  scE: '⪴',\n  scap: '⪸',\n  scaron: 'š',\n  sccue: '≽',\n  sce: '⪰',\n  scedil: 'ş',\n  scirc: 'ŝ',\n  scnE: '⪶',\n  scnap: '⪺',\n  scnsim: '⋩',\n  scpolint: '⨓',\n  scsim: '≿',\n  scy: 'с',\n  sdot: '⋅',\n  sdotb: '⊡',\n  sdote: '⩦',\n  seArr: '⇘',\n  searhk: '⤥',\n  searr: '↘',\n  searrow: '↘',\n  sec: '§',\n  sect: '§',\n  semi: ';',\n  seswar: '⤩',\n  setminus: '∖',\n  setmn: '∖',\n  sext: '✶',\n  sfr: '𝔰',\n  sfrown: '⌢',\n  sharp: '♯',\n  shchcy: 'щ',\n  shcy: 'ш',\n  shortmid: '∣',\n  shortparallel: '∥',\n  sh: '­',\n  shy: '­',\n  sigma: 'σ',\n  sigmaf: 'ς',\n  sigmav: 'ς',\n  sim: '∼',\n  simdot: '⩪',\n  sime: '≃',\n  simeq: '≃',\n  simg: '⪞',\n  simgE: '⪠',\n  siml: '⪝',\n  simlE: '⪟',\n  simne: '≆',\n  simplus: '⨤',\n  simrarr: '⥲',\n  slarr: '←',\n  smallsetminus: '∖',\n  smashp: '⨳',\n  smeparsl: '⧤',\n  smid: '∣',\n  smile: '⌣',\n  smt: '⪪',\n  smte: '⪬',\n  smtes: '⪬︀',\n  softcy: 'ь',\n  sol: '/',\n  solb: '⧄',\n  solbar: '⌿',\n  sopf: '𝕤',\n  spades: '♠',\n  spadesuit: '♠',\n  spar: '∥',\n  sqcap: '⊓',\n  sqcaps: '⊓︀',\n  sqcup: '⊔',\n  sqcups: '⊔︀',\n  sqsub: '⊏',\n  sqsube: '⊑',\n  sqsubset: '⊏',\n  sqsubseteq: '⊑',\n  sqsup: '⊐',\n  sqsupe: '⊒',\n  sqsupset: '⊐',\n  sqsupseteq: '⊒',\n  squ: '□',\n  square: '□',\n  squarf: '▪',\n  squf: '▪',\n  srarr: '→',\n  sscr: '𝓈',\n  ssetmn: '∖',\n  ssmile: '⌣',\n  sstarf: '⋆',\n  star: '☆',\n  starf: '★',\n  straightepsilon: 'ϵ',\n  straightphi: 'ϕ',\n  strns: '¯',\n  sub: '⊂',\n  subE: '⫅',\n  subdot: '⪽',\n  sube: '⊆',\n  subedot: '⫃',\n  submult: '⫁',\n  subnE: '⫋',\n  subne: '⊊',\n  subplus: '⪿',\n  subrarr: '⥹',\n  subset: '⊂',\n  subseteq: '⊆',\n  subseteqq: '⫅',\n  subsetneq: '⊊',\n  subsetneqq: '⫋',\n  subsim: '⫇',\n  subsub: '⫕',\n  subsup: '⫓',\n  succ: '≻',\n  succapprox: '⪸',\n  succcurlyeq: '≽',\n  succeq: '⪰',\n  succnapprox: '⪺',\n  succneqq: '⪶',\n  succnsim: '⋩',\n  succsim: '≿',\n  sum: '∑',\n  sung: '♪',\n  sup: '⊃',\n  sup1: '¹',\n  sup2: '²',\n  sup3: '³',\n  supE: '⫆',\n  supdot: '⪾',\n  supdsub: '⫘',\n  supe: '⊇',\n  supedot: '⫄',\n  suphsol: '⟉',\n  suphsub: '⫗',\n  suplarr: '⥻',\n  supmult: '⫂',\n  supnE: '⫌',\n  supne: '⊋',\n  supplus: '⫀',\n  supset: '⊃',\n  supseteq: '⊇',\n  supseteqq: '⫆',\n  supsetneq: '⊋',\n  supsetneqq: '⫌',\n  supsim: '⫈',\n  supsub: '⫔',\n  supsup: '⫖',\n  swArr: '⇙',\n  swarhk: '⤦',\n  swarr: '↙',\n  swarrow: '↙',\n  swnwar: '⤪',\n  szli: 'ß',\n  szlig: 'ß',\n  target: '⌖',\n  tau: 'τ',\n  tbrk: '⎴',\n  tcaron: 'ť',\n  tcedil: 'ţ',\n  tcy: 'т',\n  tdot: '⃛',\n  telrec: '⌕',\n  tfr: '𝔱',\n  there4: '∴',\n  therefore: '∴',\n  theta: 'θ',\n  thetasym: 'ϑ',\n  thetav: 'ϑ',\n  thickapprox: '≈',\n  thicksim: '∼',\n  thinsp: ' ',\n  thkap: '≈',\n  thksim: '∼',\n  thor: 'þ',\n  thorn: 'þ',\n  tilde: '˜',\n  time: '×',\n  times: '×',\n  timesb: '⊠',\n  timesbar: '⨱',\n  timesd: '⨰',\n  tint: '∭',\n  toea: '⤨',\n  top: '⊤',\n  topbot: '⌶',\n  topcir: '⫱',\n  topf: '𝕥',\n  topfork: '⫚',\n  tosa: '⤩',\n  tprime: '‴',\n  trade: '™',\n  triangle: '▵',\n  triangledown: '▿',\n  triangleleft: '◃',\n  trianglelefteq: '⊴',\n  triangleq: '≜',\n  triangleright: '▹',\n  trianglerighteq: '⊵',\n  tridot: '◬',\n  trie: '≜',\n  triminus: '⨺',\n  triplus: '⨹',\n  trisb: '⧍',\n  tritime: '⨻',\n  trpezium: '⏢',\n  tscr: '𝓉',\n  tscy: 'ц',\n  tshcy: 'ћ',\n  tstrok: 'ŧ',\n  twixt: '≬',\n  twoheadleftarrow: '↞',\n  twoheadrightarrow: '↠',\n  uArr: '⇑',\n  uHar: '⥣',\n  uacut: 'ú',\n  uacute: 'ú',\n  uarr: '↑',\n  ubrcy: 'ў',\n  ubreve: 'ŭ',\n  ucir: 'û',\n  ucirc: 'û',\n  ucy: 'у',\n  udarr: '⇅',\n  udblac: 'ű',\n  udhar: '⥮',\n  ufisht: '⥾',\n  ufr: '𝔲',\n  ugrav: 'ù',\n  ugrave: 'ù',\n  uharl: '↿',\n  uharr: '↾',\n  uhblk: '▀',\n  ulcorn: '⌜',\n  ulcorner: '⌜',\n  ulcrop: '⌏',\n  ultri: '◸',\n  umacr: 'ū',\n  um: '¨',\n  uml: '¨',\n  uogon: 'ų',\n  uopf: '𝕦',\n  uparrow: '↑',\n  updownarrow: '↕',\n  upharpoonleft: '↿',\n  upharpoonright: '↾',\n  uplus: '⊎',\n  upsi: 'υ',\n  upsih: 'ϒ',\n  upsilon: 'υ',\n  upuparrows: '⇈',\n  urcorn: '⌝',\n  urcorner: '⌝',\n  urcrop: '⌎',\n  uring: 'ů',\n  urtri: '◹',\n  uscr: '𝓊',\n  utdot: '⋰',\n  utilde: 'ũ',\n  utri: '▵',\n  utrif: '▴',\n  uuarr: '⇈',\n  uum: 'ü',\n  uuml: 'ü',\n  uwangle: '⦧',\n  vArr: '⇕',\n  vBar: '⫨',\n  vBarv: '⫩',\n  vDash: '⊨',\n  vangrt: '⦜',\n  varepsilon: 'ϵ',\n  varkappa: 'ϰ',\n  varnothing: '∅',\n  varphi: 'ϕ',\n  varpi: 'ϖ',\n  varpropto: '∝',\n  varr: '↕',\n  varrho: 'ϱ',\n  varsigma: 'ς',\n  varsubsetneq: '⊊︀',\n  varsubsetneqq: '⫋︀',\n  varsupsetneq: '⊋︀',\n  varsupsetneqq: '⫌︀',\n  vartheta: 'ϑ',\n  vartriangleleft: '⊲',\n  vartriangleright: '⊳',\n  vcy: 'в',\n  vdash: '⊢',\n  vee: '∨',\n  veebar: '⊻',\n  veeeq: '≚',\n  vellip: '⋮',\n  verbar: '|',\n  vert: '|',\n  vfr: '𝔳',\n  vltri: '⊲',\n  vnsub: '⊂⃒',\n  vnsup: '⊃⃒',\n  vopf: '𝕧',\n  vprop: '∝',\n  vrtri: '⊳',\n  vscr: '𝓋',\n  vsubnE: '⫋︀',\n  vsubne: '⊊︀',\n  vsupnE: '⫌︀',\n  vsupne: '⊋︀',\n  vzigzag: '⦚',\n  wcirc: 'ŵ',\n  wedbar: '⩟',\n  wedge: '∧',\n  wedgeq: '≙',\n  weierp: '℘',\n  wfr: '𝔴',\n  wopf: '𝕨',\n  wp: '℘',\n  wr: '≀',\n  wreath: '≀',\n  wscr: '𝓌',\n  xcap: '⋂',\n  xcirc: '◯',\n  xcup: '⋃',\n  xdtri: '▽',\n  xfr: '𝔵',\n  xhArr: '⟺',\n  xharr: '⟷',\n  xi: 'ξ',\n  xlArr: '⟸',\n  xlarr: '⟵',\n  xmap: '⟼',\n  xnis: '⋻',\n  xodot: '⨀',\n  xopf: '𝕩',\n  xoplus: '⨁',\n  xotime: '⨂',\n  xrArr: '⟹',\n  xrarr: '⟶',\n  xscr: '𝓍',\n  xsqcup: '⨆',\n  xuplus: '⨄',\n  xutri: '△',\n  xvee: '⋁',\n  xwedge: '⋀',\n  yacut: 'ý',\n  yacute: 'ý',\n  yacy: 'я',\n  ycirc: 'ŷ',\n  ycy: 'ы',\n  ye: '¥',\n  yen: '¥',\n  yfr: '𝔶',\n  yicy: 'ї',\n  yopf: '𝕪',\n  yscr: '𝓎',\n  yucy: 'ю',\n  yum: 'ÿ',\n  yuml: 'ÿ',\n  zacute: 'ź',\n  zcaron: 'ž',\n  zcy: 'з',\n  zdot: 'ż',\n  zeetrf: 'ℨ',\n  zeta: 'ζ',\n  zfr: '𝔷',\n  zhcy: 'ж',\n  zigrarr: '⇝',\n  zopf: '𝕫',\n  zscr: '𝓏',\n  zwj: '‍',\n  zwnj: '‌'\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.29/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.29/#html-blocks>.\n *\n * Note that `textarea` is not available in `CommonMark@0.29` but has been\n * merged to the primary branch and is slated to be released in the next release\n * of CommonMark.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = -1\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GitHub Flavored Markdown (GFM).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown)\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/** @type {HtmlExtension} */\nexport const gfmHtml = combineHtmlExtensions([\n  gfmAutolinkLiteralHtml,\n  gfmStrikethroughHtml,\n  gfmTableHtml,\n  gfmTagfilterHtml,\n  gfmTaskListItemHtml\n])\n","export {gfmAutolinkLiteral} from './lib/syntax.js'\nexport {gfmAutolinkLiteralHtml} from './lib/html.js'\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Event[]} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').Handle} Handle\n * @typedef {import('micromark-util-types').CompileContext} CompileContext\n * @typedef {import('micromark-util-types').Token} Token\n */\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\n/** @type {HtmlExtension} */\n\nexport const gfmAutolinkLiteralHtml = {\n  exit: {\n    literalAutolinkEmail,\n    literalAutolinkHttp,\n    literalAutolinkWww\n  }\n}\n/** @type {Handle} */\n\nfunction literalAutolinkWww(token) {\n  anchorFromToken.call(this, token, 'http://')\n}\n/** @type {Handle} */\n\nfunction literalAutolinkEmail(token) {\n  anchorFromToken.call(this, token, 'mailto:')\n}\n/** @type {Handle} */\n\nfunction literalAutolinkHttp(token) {\n  anchorFromToken.call(this, token)\n}\n/**\n * @this CompileContext\n * @param {Token} token\n * @param {string} [protocol]\n * @returns {void}\n */\n\nfunction anchorFromToken(token, protocol) {\n  const url = this.sliceSerialize(token)\n  this.tag('<a href=\"' + sanitizeUri((protocol || '') + url) + '\">')\n  this.raw(this.encode(url))\n  this.tag('</a>')\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","/**\n * @typedef {import('./lib/syntax.js').Options} Options\n */\nexport {gfmStrikethroughHtml} from './lib/html.js'\nexport {gfmStrikethrough} from './lib/syntax.js'\n","/**\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\n/** @type {HtmlExtension} */\nexport const gfmStrikethroughHtml = {\n  enter: {\n    strikethrough() {\n      this.tag('<del>')\n    }\n  },\n  exit: {\n    strikethrough() {\n      this.tag('</del>')\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n    /** @type {Token} */\n\n    let strikethrough\n    /** @type {Token} */\n\n    let text\n    /** @type {number} */\n\n    let open\n    /** @type {Event[]} */\n\n    let nextEvents // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        code !== 126 ||\n        (previous === 126 &&\n          events[events.length - 1][1].type !== 'characterEscape')\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","export {gfmTableHtml} from './lib/html.js'\nexport {gfmTable} from './lib/syntax.js'\n","/**\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\n/**\n * @typedef {import('./syntax.js').Align} Align\n */\nconst alignment = {\n  null: '',\n  left: ' align=\"left\"',\n  right: ' align=\"right\"',\n  center: ' align=\"center\"'\n}\n/** @type {HtmlExtension} */\n\nexport const gfmTableHtml = {\n  enter: {\n    table(token) {\n      this.lineEndingIfNeeded()\n      this.tag('<table>') // @ts-expect-error Custom.\n\n      this.setData('tableAlign', token._align)\n    },\n\n    tableBody() {\n      // Clear slurping line ending from the delimiter row.\n      this.setData('slurpOneLineEnding')\n      this.tag('<tbody>')\n    },\n\n    tableData() {\n      /** @type {string|undefined} */\n      const align = // @ts-expect-error Custom.\n        alignment[this.getData('tableAlign')[this.getData('tableColumn')]]\n\n      if (align === undefined) {\n        // Capture results to ignore them.\n        this.buffer()\n      } else {\n        this.lineEndingIfNeeded()\n        this.tag('<td' + align + '>')\n      }\n    },\n\n    tableHead() {\n      this.lineEndingIfNeeded()\n      this.tag('<thead>')\n    },\n\n    tableHeader() {\n      this.lineEndingIfNeeded()\n      this.tag(\n        '<th' + // @ts-expect-error Custom.\n          alignment[this.getData('tableAlign')[this.getData('tableColumn')]] +\n          '>'\n      )\n    },\n\n    tableRow() {\n      this.setData('tableColumn', 0)\n      this.lineEndingIfNeeded()\n      this.tag('<tr>')\n    }\n  },\n  exit: {\n    // Overwrite the default code text data handler to unescape escaped pipes when\n    // they are in tables.\n    codeTextData(token) {\n      let value = this.sliceSerialize(token)\n\n      if (this.getData('tableAlign')) {\n        value = value.replace(/\\\\([\\\\|])/g, replace)\n      }\n\n      this.raw(this.encode(value))\n    },\n\n    table() {\n      this.setData('tableAlign') // If there was no table body, make sure the slurping from the delimiter row\n      // is cleared.\n\n      this.setData('slurpAllLineEndings')\n      this.lineEndingIfNeeded()\n      this.tag('</table>')\n    },\n\n    tableBody() {\n      this.lineEndingIfNeeded()\n      this.tag('</tbody>')\n    },\n\n    tableData() {\n      /** @type {number} */\n      // @ts-expect-error Custom.\n      const column = this.getData('tableColumn') // @ts-expect-error Custom.\n\n      if (column in this.getData('tableAlign')) {\n        this.tag('</td>')\n        this.setData('tableColumn', column + 1)\n      } else {\n        // Stop capturing.\n        this.resume()\n      }\n    },\n\n    tableHead() {\n      this.lineEndingIfNeeded()\n      this.tag('</thead>')\n      this.setData('slurpOneLineEnding', true) // Slurp the line ending from the delimiter row.\n    },\n\n    tableHeader() {\n      this.tag('</th>') // @ts-expect-error Custom.\n\n      this.setData('tableColumn', this.getData('tableColumn') + 1)\n    },\n\n    tableRow() {\n      /** @type {Align[]} */\n      // @ts-expect-error Custom.\n      const align = this.getData('tableAlign')\n      /** @type {number} */\n      // @ts-expect-error Custom.\n\n      let column = this.getData('tableColumn')\n\n      while (column < align.length) {\n        this.lineEndingIfNeeded() // @ts-expect-error `null` is fine as an index.\n\n        this.tag('<td' + alignment[align[column]] + '></td>')\n        column++\n      }\n\n      this.setData('tableColumn', column)\n      this.lineEndingIfNeeded()\n      this.tag('</tr>')\n    }\n  }\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\n\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|null} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst setextUnderlineMini = {\n  tokenize: tokenizeSetextUnderlineMini,\n  partial: true\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {Token} */\n\n  let cell\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        content = {\n          type: 'tableContent',\n          // @ts-expect-error `contentStart` is defined if `contentEnd` is too.\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          // @ts-expect-error `contentStart` is defined if `contentEnd` is too.\n          contentStart, // @ts-expect-error `contentStart` is defined if `contentEnd` is too.\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        ) // @ts-expect-error `contentStart` is defined if `contentEnd` is too.\n\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart &&\n      cellStart + 1 < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Align[]} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      atDelimiterLineStart,\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterLineStart(code) {\n    // To do: is the lazy setext thing still needed?\n    return effects.check(\n      setextUnderlineMini,\n      nok, // Support an indent before the delimiter row.\n      factorySpace(effects, rowStartDelimiter, 'linePrefix', 4)\n    )(code)\n  }\n  /** @type {State} */\n\n  function rowStartDelimiter(code) {\n    // If there’s another space, or we’re at the EOL/EOF, exit.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return nok(code)\n    }\n\n    effects.enter('tableDelimiterRow')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push(null)\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n} // Based on micromark, but that won’t work as we’re in a table, and that expects\n// content.\n// <https://github.com/micromark/micromark/blob/main/lib/tokenize/setext-underline.js>\n\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderlineMini(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code !== 45) {\n      return nok(code)\n    }\n\n    effects.enter('setextUnderline')\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return sequence\n    }\n\n    return whitespace(code)\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return whitespace\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').CompileContext} CompileContext\n */\n\n/**\n * An opening or closing tag, followed by a case-insensitive specific tag name,\n * followed by HTML whitespace, a greater than, or a slash.\n */\nconst reFlow =\n  /<(\\/?)(iframe|noembed|noframes|plaintext|script|style|title|textarea|xmp)(?=[\\t\\n\\f\\r />])/gi\n\n/**\n * As HTML (text) parses tags separately (and v. strictly), we don’t need to be\n * global.\n */\nconst reText = new RegExp('^' + reFlow.source, 'i')\n\n/** @type {HtmlExtension} */\nexport const gfmTagfilterHtml = {\n  exit: {\n    htmlFlowData(token) {\n      exitHtmlData.call(this, token, reFlow)\n    },\n    htmlTextData(token) {\n      exitHtmlData.call(this, token, reText)\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @param {Token} token\n * @param {RegExp} filter\n */\nfunction exitHtmlData(token, filter) {\n  let value = this.sliceSerialize(token)\n\n  if (this.options.allowDangerousHtml) {\n    value = value.replace(filter, '&lt;$1$2')\n  }\n\n  this.raw(this.encode(value))\n}\n","export {gfmTaskListItemHtml} from './lib/html.js'\nexport {gfmTaskListItem} from './lib/syntax.js'\n","/**\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\n/** @type {HtmlExtension} */\nexport const gfmTaskListItemHtml = {\n  enter: {\n    taskListCheck() {\n      this.tag('<input ')\n    }\n  },\n  exit: {\n    taskListCheck() {\n      this.tag('disabled=\"\" type=\"checkbox\">')\n    },\n\n    taskListCheckValueChecked() {\n      this.tag('checked=\"\" ')\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownSpace,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (markdownSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'whitespace' &&\n      code !== null &&\n      !markdownLineEndingOrSpace(code)\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @type {Array.<FromMarkdownExtension>}\n */\nexport const gfmFromMarkdown = [\n  gfmAutolinkLiteralFromMarkdown,\n  gfmStrikethroughFromMarkdown,\n  gfmTableFromMarkdown,\n  gfmTaskListItemFromMarkdown\n]\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  // Not an expected previous character.\n  if (!previous(match, true) || /[_-]$/.test(label)) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * Get the total count of `character` in `value`.\n *\n * @param {any} value Content, coerced to string\n * @param {string} character Single character to look for\n * @return {number} Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  var source = String(value)\n  var count = 0\n  var index\n\n  if (typeof character !== 'string') {\n    throw new Error('Expected character')\n  }\n\n  index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options Configuration.\n * @property {Test} [ignore] `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Extract<Node, import('mdast').Parent>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Object.<string, Replace>} FindAndReplaceSchema\n * @typedef {Array.<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array.<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array.<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents').Visitor<Text>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, grandparent)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {Parent} parent\n       * @returns {VisitorResult}\n       */\n      function handler(node, parent) {\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        let index = parent.children.indexOf(node)\n        /** @type {Array.<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          // @ts-expect-error this is perfectly fine, typescript.\n          let value = replace(...match, {\n            index: match.index,\n            input: match.input\n          })\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (position === undefined) {\n          nodes = [node]\n          index--\n        } else {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        }\n\n        return index + nodes.length + 1\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {CONTINUE|SKIP|EXIT} Action Union of the action types\n * @typedef {number} Index Move to the sibling at index next (after node itself is completely traversed). Useful if mutating the tree, such as removing the node the visitor is currently on, or any of its previous siblings (or next siblings, in case of reverse) Results less than 0 or greater than or equal to children.length stop traversing the parent\n * @typedef {[(Action|null|undefined|void)?, (Index|null|undefined)?]} ActionTuple List with one or two values, the first an action, the second an index.\n * @typedef {null|undefined|Action|Index|ActionTuple|void} VisitorResult Any value that can be returned from a visitor\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {Array.<Parent>} ancestors Ancestors of node\n * @returns {VisitorResult}\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-ignore no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      var is = convert(test)\n      var step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        var value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string} */\n        var name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          var result = []\n          /** @type {ActionTuple} */\n          var subresult\n          /** @type {number} */\n          var offset\n          /** @type {Array.<Parent>} */\n          var grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          if (node.children && result[0] !== SKIP) {\n            // @ts-ignore looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-ignore looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-ignore looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return '\\u001B[33m' + d + '\\u001B[39m'\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [{character: '~', inConstruct: 'phrasing'}],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context) {\n  const exit = context.enter('emphasis')\n  const value = containerPhrasing(node, context, {before: '~', after: '~'})\n  exit()\n  return '~~' + value + '~~'\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const children = parent.children || []\n  /** @type {Array.<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: ''\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n    }\n\n    results.push(context.handle(child, parent, context, {before, after}))\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {AlignType[]} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter({type: 'table', align, children: []}, token)\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context) {\n    // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n    return serializeData(handleTableAsData(node, context), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context) {\n    const row = handleTableRowAsData(node, context)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array.<Array.<string>>} matrix\n   * @param {Array.<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   */\n  function handleTableAsData(node, context) {\n    const children = node.children\n    let index = -1\n    /** @type {Array.<Array.<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], context)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   */\n  function handleTableRowAsData(node, context) {\n    const children = node.children\n    let index = -1\n    /** @type {Array.<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      result[index] = handleTableCell(children[index], node, context)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef MarkdownTableOptions\n * @property {string|null|Array.<string|null|undefined>} [align]\n * @property {boolean} [padding=true]\n * @property {boolean} [delimiterStart=true]\n * @property {boolean} [delimiterStart=true]\n * @property {boolean} [delimiterEnd=true]\n * @property {boolean} [alignDelimiters=true]\n * @property {(value: string) => number} [stringLength]\n */\n\n/**\n * Create a table from a matrix of strings.\n *\n * @param {Array.<Array.<string|null|undefined>>} table\n * @param {MarkdownTableOptions} [options]\n * @returns {string}\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {number[]} Character codes as symbols for alignment per column. */\n  const alignments = []\n  let rowIndex = -1\n  /** @type {string[][]} Cells per row. */\n  const cellMatrix = []\n  /** @type {number[][]} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {number[]} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  /** @type {number} */\n  let columnIndex\n  /** @type {string[]} Cells of current row */\n  let row\n  /** @type {number[]} Sizes of current row */\n  let sizes\n  /** @type {number} Sizes of current cell */\n  let size\n  /** @type {string} Current cell */\n  let cell\n  /** @type {string[]} Chunks of current line. */\n  let line\n  /** @type {string} */\n  let before\n  /** @type {string} */\n  let after\n  /** @type {number} */\n  let code\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    columnIndex = -1\n    row = []\n    sizes = []\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  row = []\n  sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    code = alignments[columnIndex]\n    before = ''\n    after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {string[]} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    row = cellMatrix[rowIndex]\n    sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      cell = row[columnIndex] || ''\n      before = ''\n      after = ''\n\n      if (settings.alignDelimiters !== false) {\n        size = longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.charCodeAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  this.stack[this.stack.length - 2].checked =\n    token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n  /** @type {Paragraph} */\n  // @ts-expect-error: must be true.\n  const node = this.stack[this.stack.length - 1]\n  /** @type {BlockContent[]} */\n  // @ts-expect-error: check whether `parent` is a `listItem` later.\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else {\n        // @ts-expect-error: must be true.\n        head.position.start.column++\n        // @ts-expect-error: must be true.\n        head.position.start.offset++\n        // @ts-expect-error: must be true.\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context) {\n  const head = node.children[0]\n  let value = listItem(node, parent, context)\n\n  if (typeof node.checked === 'boolean' && head && head.type === 'paragraph') {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + '[' + (node.checked ? 'x' : ' ') + '] '\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context) {\n  const listItemIndent = checkListItemIndent(context)\n  /** @type {string} */\n  let bullet = checkBullet(context)\n\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      '.'\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && 'spread' in parent && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const exit = context.enter('listItem')\n  const value = indentLines(containerFlow(node, context), map)\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n */\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @returns {string}\n */\nexport function containerFlow(parent, context) {\n  const children = parent.children || []\n  /** @type {Array.<string>} */\n  const results = []\n  let index = -1\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index < children.length - 1) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n    /** @type {ReturnType<Join>} */\n    let result\n\n    while (index--) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array.<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","import remarkStringify from './lib/index.js'\n\nexport default remarkStringify\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast-util-to-markdown').Options} Options\n */\n\nimport {toMarkdown} from 'mdast-util-to-markdown'\n\n/** @type {import('unified').Plugin<[Options]|void[], Node, string>} */\nexport default function remarkStringify(options) {\n  /** @type {import('unified').CompilerFunction<Node, string>} */\n  const compiler = (tree) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return toMarkdown(\n      tree,\n      Object.assign({}, settings, options, {\n        // Note: this option is not in the readme.\n        // The goal is for it to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('toMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Compiler: compiler})\n}\n","/**\n * @typedef {import('./lib/types.js').SafeOptions} SafeOptions\n * @typedef {import('./lib/types.js').Context} Context\n * @typedef {import('./lib/types.js').Handle} Handle\n * @typedef {import('./lib/types.js').Handlers} Handlers\n * @typedef {import('./lib/types.js').Join} Join\n * @typedef {import('./lib/types.js').Unsafe} Unsafe\n * @typedef {import('./lib/types.js').Options} Options\n * @typedef {import('./lib/util/indent-lines.js').Map} Map\n */\n\nexport {toMarkdown} from './lib/index.js'\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Join} Join\n * @typedef {import('./types.js').Unsafe} Unsafe\n */\n\nimport {zwitch} from 'zwitch'\nimport {configure} from './configure.js'\nimport {handle} from './handle/index.js'\nimport {join} from './join.js'\nimport {unsafe} from './unsafe.js'\n\n/**\n * @param {Node} tree\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toMarkdown(tree, options = {}) {\n  /** @type {Context} */\n  // @ts-expect-error: we’ll add `handle` later.\n  const context = {\n    enter,\n    stack: [],\n    unsafe: [],\n    join: [],\n    handlers: {},\n    options: {}\n  }\n\n  configure(context, {unsafe, join, handlers: handle})\n  configure(context, options)\n\n  if (context.options.tightDefinitions) {\n    configure(context, {join: [joinDefinition]})\n  }\n\n  /** @type {Handle} */\n  context.handle = zwitch('type', {\n    invalid,\n    // @ts-expect-error: hush.\n    unknown,\n    // @ts-expect-error: hush.\n    handlers: context.handlers\n  })\n\n  let result = context.handle(tree, null, context, {before: '\\n', after: '\\n'})\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  /** @type {Context['enter']} */\n  function enter(name) {\n    context.stack.push(name)\n    return exit\n\n    function exit() {\n      context.stack.pop()\n    }\n  }\n}\n\n/**\n * @type {Handle}\n * @param {unknown} value\n */\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\n/**\n * @type {Handle}\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\n/** @type {Join} */\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n","var own = {}.hasOwnProperty\n\n/**\n * @callback Handler\n * @param {...unknown} value\n * @return {unknown}\n *\n * @typedef {Record<string, Handler>} Handlers\n *\n * @typedef {Object} Options\n * @property {Handler} [unknown]\n * @property {Handler} [invalid]\n * @property {Handlers} [handlers]\n */\n\n/**\n * Handle values based on a property.\n *\n * @param {string} key\n * @param {Options} [options]\n */\nexport function zwitch(key, options) {\n  var settings = options || {}\n\n  /**\n   * Handle one value.\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @param {...unknown} [value]\n   * @this {unknown}\n   * @returns {unknown}\n   * @property {Handler} invalid\n   * @property {Handler} unknown\n   * @property {Handlers} handlers\n   */\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    if (fn) {\n      return fn.apply(this, arguments)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n","/**\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n */\n\n/**\n * @param {Context} base\n * @param {Options} extension\n * @returns {Context}\n */\nexport function configure(base, extension) {\n  let index = -1\n  /** @type {string} */\n  let key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      /* c8 ignore next 2 */\n      // @ts-expect-error: hush.\n      base[key] = [...(base[key] || []), ...(extension[key] || [])]\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      // @ts-expect-error: hush.\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../util/indent-lines.js').Map} Map\n */\n\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\n\n/**\n * @type {Handle}\n * @param {Blockquote} node\n */\nexport function blockquote(node, _, context) {\n  const exit = context.enter('blockquote')\n  const value = indentLines(containerFlow(node, context), map)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('mdast').Break} Break\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @type {Handle}\n * @param {Break} _\n */\nexport function hardBreak(_, _1, context, safe) {\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      context.unsafe[index].character === '\\n' &&\n      patternInScope(context.stack, context.unsafe[index])\n    ) {\n      return /[ \\t]/.test(safe.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array.<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array.<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../util/indent-lines.js').Map} Map\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {safe} from '../util/safe.js'\n\n/**\n * @type {Handle}\n * @param {Code} node\n */\nexport function code(node, _, context) {\n  const marker = checkFence(context)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n  /** @type {string} */\n  let value\n  /** @type {Exit} */\n  let exit\n\n  if (formatCodeAsIndented(node, context)) {\n    exit = context.enter('codeIndented')\n    value = indentLines(raw, map)\n  } else {\n    const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n    /** @type {Exit} */\n    let subexit\n    exit = context.enter('codeFenced')\n    value = sequence\n\n    if (node.lang) {\n      subexit = context.enter('codeFencedLang' + suffix)\n      value += safe(context, node.lang, {\n        before: '`',\n        after: ' ',\n        encode: ['`']\n      })\n      subexit()\n    }\n\n    if (node.lang && node.meta) {\n      subexit = context.enter('codeFencedMeta' + suffix)\n      value +=\n        ' ' +\n        safe(context, node.meta, {\n          before: ' ',\n          after: '\\n',\n          encode: ['`']\n        })\n      subexit()\n    }\n\n    value += '\\n'\n\n    if (raw) {\n      value += raw + '\\n'\n    }\n\n    value += sequence\n  }\n\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * Get the count of the longest repeating streak of `character` in `value`.\n *\n * @param {string} value Content.\n * @param {string} character Single character to look for\n * @returns {number} Count of most frequent adjacent `character`s in `value`\n */\nexport function longestStreak(value, character) {\n  var source = String(value)\n  var index = source.indexOf(character)\n  var expected = index\n  var count = 0\n  var max = 0\n\n  if (typeof character !== 'string' || character.length !== 1) {\n    throw new Error('Expected character')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + 1\n    index = source.indexOf(character, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').Context} Context\n */\n\n/**\n * @param {Code} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, context) {\n  return Boolean(\n    !context.options.fences &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['fence'], undefined>}\n */\nexport function checkFence(context) {\n  const marker = context.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array.<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array.<number>} */\n  const positions = []\n  /** @type {Array.<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      position + 1 < end &&\n      positions[index + 1] === position + 1 &&\n      infos[position].after &&\n      !infos[position + 1].before &&\n      !infos[position + 1].after\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array.<number>} */\n  const positions = []\n  /** @type {Array.<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {checkQuote} from '../util/check-quote.js'\nimport {safe} from '../util/safe.js'\n\n/**\n * @type {Handle}\n * @param {Definition} node\n */\nexport function definition(node, _, context) {\n  const marker = checkQuote(context)\n  const suffix = marker === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = context.enter('definition')\n  let subexit = context.enter('label')\n  let value =\n    '[' + safe(context, association(node), {before: '[', after: ']'}) + ']: '\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there’s whitespace, enclosed is prettier.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {before: ' ', after: ' '})\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      marker +\n      safe(context, node.title, {before: marker, after: marker}) +\n      marker\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeEntity} from 'parse-entities/decode-entity.js'\n\nconst characterEscape = /\\\\([!-/:-@[-`{-~])/g\nconst characterReference = /&(#(\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return node.identifier\n    .replace(characterEscape, '$1')\n    .replace(characterReference, decodeIfPossible)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction decodeIfPossible($0, $1) {\n  return decodeEntity($1) || $0\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['quote'], undefined>}\n */\nexport function checkQuote(context) {\n  const marker = context.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @type {Handle}\n * @param {Emphasis} node\n */\nexport function emphasis(node, _, context) {\n  const marker = checkEmphasis(context)\n  const exit = context.enter('emphasis')\n  const value = containerPhrasing(node, context, {\n    before: marker,\n    after: marker\n  })\n  exit()\n  return marker + value + marker\n}\n\n/**\n * @type {Handle}\n * @param {Emphasis} _\n */\nfunction emphasisPeek(_, _1, context) {\n  return context.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['emphasis'], undefined>}\n */\nexport function checkEmphasis(context) {\n  const marker = context.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\n\n/**\n * @type {Handle}\n * @param {Heading} node\n */\nexport function heading(node, _, context) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n  /** @type {string} */\n  let value\n\n  if (formatHeadingAsSetext(node, context)) {\n    exit = context.enter('headingSetext')\n    subexit = context.enter('phrasing')\n    value = containerPhrasing(node, context, {before: '\\n', after: '\\n'})\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  exit = context.enter('headingAtx')\n  subexit = context.enter('phrasing')\n  value = containerPhrasing(node, context, {before: '# ', after: '\\n'})\n  value = value ? sequence + ' ' + value : sequence\n  if (context.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, context) {\n  return Boolean(\n    context.options.setext && (!node.depth || node.depth < 3) && toString(node)\n  )\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../types.js').Handle} Handle\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @type {Handle}\n * @param {HTML} node\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @type {Handle}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {safe} from '../util/safe.js'\n\nimage.peek = imagePeek\n\n/**\n * @type {Handle}\n * @param {Image} node\n */\nexport function image(node, _, context) {\n  const quote = checkQuote(context)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = context.enter('image')\n  let subexit = context.enter('label')\n  let value = '![' + safe(context, node.alt, {before: '[', after: ']'}) + ']('\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // Or if there’s markdown whitespace or an eol, enclose.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {\n      before: '(',\n      after: node.title ? ' ' : ')'\n    })\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      quote +\n      safe(context, node.title, {before: quote, after: quote}) +\n      quote\n    subexit()\n  }\n\n  value += ')'\n  exit()\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {safe} from '../util/safe.js'\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @type {Handle}\n * @param {ImageReference} node\n */\nexport function imageReference(node, _, context) {\n  const type = node.referenceType\n  const exit = context.enter('imageReference')\n  let subexit = context.enter('label')\n  const alt = safe(context, node.alt, {before: '[', after: ']'})\n  let value = '![' + alt + ']'\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  const reference = safe(context, association(node), {before: '[', after: ']'})\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += '[' + reference + ']'\n  } else if (type !== 'shortcut') {\n    value += '[]'\n  }\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {safe} from '../util/safe.js'\n\nlink.peek = linkPeek\n\n/**\n * @type {Handle}\n * @param {Link} node\n */\nexport function link(node, _, context) {\n  const quote = checkQuote(context)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n  /** @type {string} */\n  let value\n\n  if (formatLinkAsAutolink(node, context)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = context.stack\n    context.stack = []\n    exit = context.enter('autolink')\n    value =\n      '<' + containerPhrasing(node, context, {before: '<', after: '>'}) + '>'\n    exit()\n    context.stack = stack\n    return value\n  }\n\n  exit = context.enter('link')\n  subexit = context.enter('label')\n  value =\n    '[' + containerPhrasing(node, context, {before: '[', after: ']'}) + ']('\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // Or if there’s markdown whitespace or an eol, enclose.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {\n      before: '(',\n      after: node.title ? ' ' : ')'\n    })\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      quote +\n      safe(context, node.title, {before: quote, after: quote}) +\n      quote\n    subexit()\n  }\n\n  value += ')'\n\n  exit()\n  return value\n}\n\n/**\n * @type {Handle}\n * @param {Link} node\n */\nfunction linkPeek(node, _, context) {\n  return formatLinkAsAutolink(node, context) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, context) {\n  const raw = toString(node)\n\n  return Boolean(\n    !context.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work) or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {safe} from '../util/safe.js'\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @type {Handle}\n * @param {LinkReference} node\n */\nexport function linkReference(node, _, context) {\n  const type = node.referenceType\n  const exit = context.enter('linkReference')\n  let subexit = context.enter('label')\n  const text = containerPhrasing(node, context, {before: '[', after: ']'})\n  let value = '[' + text + ']'\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  const reference = safe(context, association(node), {before: '[', after: ']'})\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += '[' + reference + ']'\n  } else if (type !== 'shortcut') {\n    value += '[]'\n  }\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerFlow} from '../util/container-flow.js'\n\n/**\n * @type {Handle}\n * @param {List} node\n */\nexport function list(node, _, context) {\n  const exit = context.enter('list')\n  const value = containerFlow(node, context)\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerPhrasing} from '../util/container-phrasing.js'\n\n/**\n * @type {Handle}\n * @param {Paragraph} node\n */\nexport function paragraph(node, _, context) {\n  const exit = context.enter('paragraph')\n  const subexit = context.enter('phrasing')\n  const value = containerPhrasing(node, context, {before: '\\n', after: '\\n'})\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerFlow} from '../util/container-flow.js'\n\n/**\n * @type {Handle}\n * @param {Root} node\n */\nexport function root(node, _, context) {\n  return containerFlow(node, context)\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @type {Handle}\n * @param {Strong} node\n */\nexport function strong(node, _, context) {\n  const marker = checkStrong(context)\n  const exit = context.enter('strong')\n  const value = containerPhrasing(node, context, {\n    before: marker,\n    after: marker\n  })\n  exit()\n  return marker + marker + value + marker + marker\n}\n\n/**\n * @type {Handle}\n * @param {Strong} _\n */\nfunction strongPeek(_, _1, context) {\n  return context.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['strong'], undefined>}\n */\nexport function checkStrong(context) {\n  const marker = context.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {safe} from '../util/safe.js'\n\n/**\n * @type {Handle}\n * @param {Text} node\n */\nexport function text(node, _, context, safeOptions) {\n  return safe(context, node.value, safeOptions)\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @type {Handle}\n * @param {ThematicBreak} _\n */\nexport function thematicBreak(_, _1, context) {\n  const value = (\n    checkRule(context) + (context.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(context))\n\n  return context.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['ruleRepetition'], undefined>}\n */\nexport function checkRuleRepetition(context) {\n  const repetition = context.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['rule'], undefined>}\n */\nexport function checkRule(context) {\n  const marker = context.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('./types.js').Join} Join\n */\n\nimport {formatCodeAsIndented} from './util/format-code-as-indented.js'\nimport {formatHeadingAsSetext} from './util/format-heading-as-setext.js'\n\n/** @type {Array.<Join>} */\nexport const join = [joinDefaults]\n\n/** @type {Join} */\nfunction joinDefaults(left, right, parent, context) {\n  if (\n    // Two lists with the same marker.\n    (right.type === 'list' &&\n      right.type === left.type &&\n      Boolean(left.ordered) === Boolean(right.ordered)) ||\n    // Indented code after list or another indented code.\n    (right.type === 'code' &&\n      formatCodeAsIndented(right, context) &&\n      (left.type === 'list' ||\n        (left.type === right.type && formatCodeAsIndented(left, context))))\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if ('spread' in parent && typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, context)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","/**\n * @typedef {import('./types.js').Unsafe} Unsafe\n */\n\n/** @type {Array.<Unsafe>} */\nexport const unsafe = [\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {character: '!', after: '\\\\[', inConstruct: 'phrasing'},\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  {before: '\\\\]', character: '(', inConstruct: 'phrasing'},\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*'},\n  {character: '*', inConstruct: 'phrasing'},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {character: '<', after: '[!/?A-Za-z]', inConstruct: 'phrasing'},\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: ['phrasing', 'label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {\n    character: ']',\n    inConstruct: ['label', 'reference']\n  },\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {before: '[^A-Za-z]', character: '_', inConstruct: 'phrasing'},\n  {character: '_', after: '[^A-Za-z]', inConstruct: 'phrasing'},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedMetaGraveAccent',\n      'phrasing'\n    ]\n  },\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","import { toc as makeToc } from 'mdast-util-toc';\nimport { u as buildNode } from 'unist-builder';\n\nimport findTocStart from './findTocStart.js';\nimport parseTocConfiguration from './parseTocConfiguration.js';\n\nimport isInRange from '../../isInRange.js';\nimport { DEFAULT_TOC_OPTIONS } from '../../constants.js';\n\nconst transformer = (tree, file) => {\n  const tocStartFinder = findTocStart(tree);\n\n  if (!tocStartFinder.tocStart) {\n    file.info('No ToC start found, only simple formatting was done');\n    return;\n  }\n\n  const tocConfiguration = {\n    ...DEFAULT_TOC_OPTIONS,\n    ...parseTocConfiguration(tocStartFinder.tocStart.value),\n  };\n\n  const filteredHeadings = tree.children.filter(\n    (part) => part.type === 'heading' && isInRange(part.depth, tocConfiguration),\n  );\n\n  const toc = makeToc(buildNode('root', filteredHeadings)).map;\n  tree.children.splice(tocStartFinder.tocStartIndex + 1, tocStartFinder.tocSize, toc);\n};\n\nexport default () => transformer;\n","/**\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Result} Result\n */\n\nexport {toc} from './lib/index.js'\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').List} List\n * @typedef {import('./search.js').SearchOptions} SearchOptions\n * @typedef {import('./contents.js').ContentsOptions} ContentsOptions\n * @typedef {SearchOptions & ContentsOptions & ExtraOptions} Options\n *\n * @typedef ExtraOptions\n * @property {string} [heading] Heading to look for, wrapped in `new RegExp('^(' + value + ')$', 'i')`.\n *\n * @typedef Result\n * @property {number|null} index\n * @property {number|null} endIndex\n * @property {List|null} map\n */\n\nimport {search} from './search.js'\nimport {contents} from './contents.js'\nimport {toExpression} from './to-expression.js'\n\n/**\n * Get a TOC representation of `node`.\n *\n * @param {Node} node\n * @param {Options} [options]\n * @returns {Result}\n */\nexport function toc(node, options) {\n  const settings = options || {}\n  const heading = settings.heading ? toExpression(settings.heading) : null\n  const result = search(node, heading, settings)\n\n  return {\n    index: heading ? result.index : null,\n    endIndex: heading ? result.endIndex : null,\n    map: result.map.length > 0 ? contents(result.map, settings) : null\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('unist-util-visit').Visitor<Heading>} HeadingVisitor\n * @typedef {import('unist-util-is').Type} IsType\n * @typedef {import('unist-util-is').Props} IsProps\n * @typedef {import('unist-util-is').TestFunctionAnything} IsTestFunctionAnything\n *\n * @typedef SearchOptions\n * @property {string} [skip] Headings to skip, wrapped in `new RegExp('^(' + value + ')$', 'i')`. Any heading matching this expression will not be present in the table of contents.\n * @property {IsType|IsProps|IsTestFunctionAnything|Array.<IsType|IsProps|IsTestFunctionAnything>} [parents]\n * @property {Heading['depth']} [maxDepth=6] Maximum heading depth to include in the table of contents. This is inclusive: when set to `3`, level three headings are included (those with three hashes, `###`).\n *\n * @typedef SearchEntry\n * @property {Heading['depth']} depth\n * @property {Array.<PhrasingContent>} children\n * @property {string} id\n *\n * @typedef SearchResult\n * @property {number} index\n * @property {number} endIndex\n * @property {Array.<SearchEntry>} map\n */\n\nimport Slugger from 'github-slugger'\nimport {toString} from 'mdast-util-to-string'\nimport {visit} from 'unist-util-visit'\nimport {convert} from 'unist-util-is'\nimport {toExpression} from './to-expression.js'\n\nconst slugs = new Slugger()\n\n/**\n * Search a node for a toc.\n *\n * @param {Node} root\n * @param {RegExp|null} expression\n * @param {SearchOptions} settings\n * @returns {SearchResult}\n */\nexport function search(root, expression, settings) {\n  const skip = settings.skip && toExpression(settings.skip)\n  const parents = convert(settings.parents || ((d) => d === root))\n  /** @type {Array.<SearchEntry>} */\n  const map = []\n  /** @type {number|undefined} */\n  let index\n  /** @type {number} */\n  let endIndex\n  /** @type {Heading} */\n  let opening\n\n  slugs.reset()\n\n  // Visit all headings in `root`.  We `slug` all headings (to account for\n  // duplicates), but only create a TOC from top-level headings (by default).\n  visit(root, 'heading', onheading)\n\n  return {\n    index: index || -1,\n    // <sindresorhus/eslint-plugin-unicorn#980>\n    // @ts-expect-error Looks like a parent.\n    endIndex: index ? endIndex || root.children.length : -1, // eslint-disable-line unicorn/explicit-length-check\n    map\n  }\n\n  /** @type {HeadingVisitor} */\n  function onheading(node, position, parent) {\n    const value = toString(node, {includeImageAlt: false})\n    /** @type {string} */\n    // @ts-expect-error `hProperties` from <https://github.com/syntax-tree/mdast-util-to-hast>\n    const id = node.data && node.data.hProperties && node.data.hProperties.id\n    const slug = slugs.slug(id || value)\n\n    if (!parents(parent)) {\n      return\n    }\n\n    // Our opening heading.\n    if (position !== null && expression && !index && expression.test(value)) {\n      index = position + 1\n      opening = node\n      return\n    }\n\n    // Our closing heading.\n    if (\n      position !== null &&\n      opening &&\n      !endIndex &&\n      node.depth <= opening.depth\n    ) {\n      endIndex = position\n    }\n\n    // A heading after the closing (if we were looking for one).\n    if (\n      (endIndex || !expression) &&\n      (!settings.maxDepth || node.depth <= settings.maxDepth) &&\n      (!skip || !skip.test(value))\n    ) {\n      map.push({depth: node.depth, children: node.children, id: slug})\n    }\n  }\n}\n","var emoji = require('emoji-regex')\r\n\r\nmodule.exports = BananaSlug\r\n\r\nvar own = Object.hasOwnProperty\r\nvar whitespace = /\\s/g\r\nvar specials = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~’]/g\r\n\r\nfunction BananaSlug () {\r\n  var self = this\r\n\r\n  if (!(self instanceof BananaSlug)) return new BananaSlug()\r\n\r\n  self.reset()\r\n}\r\n\r\n/**\r\n * Generate a unique slug.\r\n * @param  {string} value String of text to slugify\r\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\r\n * @return {string}       A unique slug string\r\n */\r\nBananaSlug.prototype.slug = function (value, maintainCase) {\r\n  var self = this\r\n  var slug = slugger(value, maintainCase === true)\r\n  var originalSlug = slug\r\n\r\n  while (own.call(self.occurrences, slug)) {\r\n    self.occurrences[originalSlug]++\r\n    slug = originalSlug + '-' + self.occurrences[originalSlug]\r\n  }\r\n\r\n  self.occurrences[slug] = 0\r\n\r\n  return slug\r\n}\r\n\r\n/**\r\n * Reset - Forget all previous slugs\r\n * @return void\r\n */\r\nBananaSlug.prototype.reset = function () {\r\n  this.occurrences = Object.create(null)\r\n}\r\n\r\nfunction slugger (string, maintainCase) {\r\n  if (typeof string !== 'string') return ''\r\n  if (!maintainCase) string = string.toLowerCase()\r\n\r\n  return string.trim()\r\n    .replace(specials, '')\r\n    .replace(emoji(), '')\r\n    .replace(whitespace, '-')\r\n}\r\n\r\nBananaSlug.slug = slugger\r\n","module.exports = function() {\n\treturn /[\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2648-\\u2653\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267F\\u2692-\\u2694\\u2696\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD79\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED0\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3]|\\uD83E[\\uDD10-\\uDD18\\uDD80-\\uDD84\\uDDC0]|\\uD83C\\uDDFF\\uD83C[\\uDDE6\\uDDF2\\uDDFC]|\\uD83C\\uDDFE\\uD83C[\\uDDEA\\uDDF9]|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDFC\\uD83C[\\uDDEB\\uDDF8]|\\uD83C\\uDDFB\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA]|\\uD83C\\uDDFA\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF8\\uDDFE\\uDDFF]|\\uD83C\\uDDF9\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF]|\\uD83C\\uDDF8\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF]|\\uD83C\\uDDF7\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC]|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF5\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE]|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF3\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF]|\\uD83C\\uDDF2\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF]|\\uD83C\\uDDF1\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE]|\\uD83C\\uDDF0\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF]|\\uD83C\\uDDEF\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5]|\\uD83C\\uDDEE\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9]|\\uD83C\\uDDED\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA]|\\uD83C\\uDDEC\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE]|\\uD83C\\uDDEB\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7]|\\uD83C\\uDDEA\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA]|\\uD83C\\uDDE9\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF]|\\uD83C\\uDDE8\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF]|\\uD83C\\uDDE7\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF]|\\uD83C\\uDDE6\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF]|[#\\*0-9]\\u20E3/g;\n};\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {number|null} index Position of `node` in `parent`\n * @param {Parent|null} parent Parent of `node`\n * @returns {VisitorResult}\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\nexport const visit =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        var parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * Transform a string into an applicable expression.\n *\n * @param {string} value\n * @returns {RegExp}\n */\nexport function toExpression(value) {\n  return new RegExp('^(' + value + ')$', 'i')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('./search.js').SearchEntry} SearchEntry\n *\n * @typedef ContentsOptions\n * @property {boolean} [tight=false] Whether to compile list-items tightly.\n * @property {boolean} [ordered=false] Whether to compile list-items as an ordered list, otherwise they are unordered.\n * @property {string|null} [prefix=null] Add a prefix to links to headings in the table of contents. Useful for example when later going from mdast to hast and sanitizing with `hast-util-sanitize`.\n */\n\nimport extend from 'extend'\n\n/**\n * Transform a list of heading objects to a markdown list.\n *\n * @param {Array.<SearchEntry>} map\n * @param {ContentsOptions} settings\n */\nexport function contents(map, settings) {\n  const {ordered = false, tight = false, prefix = null} = settings\n  /** @type {List} */\n  const table = {type: 'list', ordered, spread: false, children: []}\n  let minDepth = Number.POSITIVE_INFINITY\n  let index = -1\n\n  // Find minimum depth.\n  while (++index < map.length) {\n    if (map[index].depth < minDepth) {\n      minDepth = map[index].depth\n    }\n  }\n\n  // Normalize depth.\n  index = -1\n\n  while (++index < map.length) {\n    map[index].depth -= minDepth - 1\n  }\n\n  // Add TOC to list.\n  index = -1\n\n  while (++index < map.length) {\n    insert(map[index], table, {ordered, tight, prefix})\n  }\n\n  return table\n}\n\n/**\n * Insert an entry into `parent`.\n *\n * @param {SearchEntry} entry\n * @param {List|ListItem} parent\n * @param {ContentsOptions} settings\n */\nfunction insert(entry, parent, settings) {\n  let index = -1\n\n  if (parent.type === 'list') {\n    if (entry.depth === 1) {\n      parent.children.push({\n        type: 'listItem',\n        spread: false,\n        children: [\n          {\n            type: 'paragraph',\n            children: [\n              {\n                type: 'link',\n                title: null,\n                url: '#' + (settings.prefix || '') + entry.id,\n                children: all(entry.children)\n              }\n            ]\n          }\n        ]\n      })\n    } else if (parent.children.length > 0) {\n      insert(entry, parent.children[parent.children.length - 1], settings)\n    } else {\n      /** @type {ListItem} */\n      const item = {type: 'listItem', spread: false, children: []}\n      parent.children.push(item)\n      insert(entry, item, settings)\n    }\n  }\n  // List item\n  else if (\n    parent.children[parent.children.length - 1] &&\n    parent.children[parent.children.length - 1].type === 'list'\n  ) {\n    entry.depth--\n    insert(\n      entry,\n      // @ts-expect-error It’s a `list`, we just checked.\n      parent.children[parent.children.length - 1],\n      settings\n    )\n  } else {\n    /** @type {List} */\n    const item = {\n      type: 'list',\n      ordered: settings.ordered,\n      spread: false,\n      children: []\n    }\n    parent.children.push(item)\n    entry.depth--\n    insert(entry, item, settings)\n  }\n\n  if (parent.type === 'list' && !settings.tight) {\n    parent.spread = false\n\n    while (++index < parent.children.length) {\n      if (parent.children[index].children.length > 1) {\n        parent.spread = true\n        break\n      }\n    }\n  } else {\n    parent.spread = !settings.tight\n  }\n}\n\n/**\n * @param {Array.<PhrasingContent>} [nodes]\n * @returns {Array.<StaticPhrasingContent>}\n */\nfunction all(nodes) {\n  /** @type {Array.<StaticPhrasingContent>} */\n  let result = []\n  let index = -1\n\n  if (nodes) {\n    while (++index < nodes.length) {\n      result = result.concat(one(nodes[index]))\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {PhrasingContent} node\n * @returns {StaticPhrasingContent|Array.<StaticPhrasingContent>}\n */\nfunction one(node) {\n  if (\n    node.type === 'link' ||\n    node.type === 'linkReference' ||\n    node.type === 'footnote' ||\n    node.type === 'footnoteReference'\n  ) {\n    // @ts-expect-error Looks like a parent.\n    return all(node.children)\n  }\n\n  if ('children' in node) {\n    const {children, position, ...copy} = node\n    return Object.assign(extend(true, {}, copy), {children: all(node.children)})\n  }\n\n  const {position, ...copy} = node\n  return extend(true, {}, copy)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","import isTocStart from './isTocStart.js';\nimport isTocEnd from '../isTocEnd.js';\n\nexport default (tree) => tree.children.reduce(\n  (seed, part) => {\n    if (seed.tocStart && !seed.isInToc) { return seed; }\n    if (isTocEnd(part)) { return { ...seed, isInToc: false }; }\n    if (isTocStart(part)) {\n      return {\n        ...seed,\n        tocStart: part,\n        tocStartIndex: seed.tocStartIndex,\n        isInToc: true,\n      };\n    }\n\n    return seed.isInToc\n      ? { ...seed, tocContent: [ ...seed.tocContent, part ], tocSize: seed.tocSize + 1 }\n      : { ...seed, tocStartIndex: seed.tocStartIndex + 1 };\n  },\n  {\n    tocStartIndex: 0,\n    tocSize: 0,\n    tocStart: undefined,\n    tocContent: [],\n    isInToc: false,\n  },\n);\n","import { TOC_START_MATCHER } from '../../constants.js';\n\nexport default (part) => part.type === 'html' && TOC_START_MATCHER.test(part.value);\n","export const homePage = 'https://github.com/quilicicf/markdown-formatter'; // NOTE: must be the same as in package.json\nexport const bugPage = 'https://github.com/quilicicf/markdown-formatter/issues'; // NOTE: must be the same as in package.json\n\nexport const DEFAULT_TOC_OPTIONS = { min: 2, max: 4 };\nexport const TOC_START_MATCHER = /^<!-- TOC START(.*) -->$/;\nexport const TOC_END_MATCHER = /^<!-- TOC END(.*) -->$/;\n\nexport const WATERMARK_VALUES = {\n  NONE: 'none',\n  TOP: 'top',\n  TOC: 'toc',\n};\n\nexport const WATERMARK_TOP = `<!-- Formatted by ${homePage} -->`;\nexport const WATERMARK_TOC = `<!-- TOC END: Formatted by ${homePage} -->`;\n\nexport const DEFAULT_MARKDOWN_FORMATTER_OPTIONS = {\n  watermark: WATERMARK_VALUES.NONE,\n};\n\nexport const DEFAULT_STRINGIFY_OPTIONS = {\n  bullet: '*',\n  emphasis: '_',\n  fences: true,\n  gfm: true,\n  listItemIndent: '1',\n  rule: '-',\n  ruleSpaces: false,\n  strong: '_',\n};\n","import { TOC_END_MATCHER } from '../constants.js';\n\nexport default (part) => part.type === 'html' && TOC_END_MATCHER.test(part.value);\n","import matchAll from '../../matchAll.js';\nimport { TOC_START_MATCHER } from '../../constants.js';\n\nconst CONFIG_CLEANERS = {\n  min (minAsString) {\n    try {\n      return parseInt(minAsString, 10);\n    } catch (error) {\n      throw Error(`Min must be a number, got ${minAsString}`);\n    }\n  },\n  max (maxAsString) {\n    try {\n      return parseInt(maxAsString, 10);\n    } catch (error) {\n      throw Error(`Min must be a number, got ${maxAsString}`);\n    }\n  },\n};\n\nexport default (tocStart) => {\n  const configAsString = TOC_START_MATCHER.exec(tocStart)[ 1 ];\n  const configItems = matchAll(\n    /([^\\s:]+):([^\\s]+)/g,\n    configAsString,\n    (match) => ({ key: match[ 1 ], value: match[ 2 ] }),\n  );\n  return configItems\n    .map((configItem) => {\n      if (!CONFIG_CLEANERS[ configItem.key ]) {\n        return configItem;\n      }\n\n      try {\n        return {\n          key: configItem.key,\n          value: CONFIG_CLEANERS[ configItem.key ](configItem.value),\n        };\n      } catch (error) {\n        process.stderr.write(error.message);\n        return {};\n      }\n    })\n    .filter(Boolean)\n    .reduce(\n      (seed, { value, key }) => ({ ...seed, [ key ]: value }),\n      {},\n    );\n};\n","/**\n * Takes a GLOBAL (add flag g) regex and executes it against the same string as long as it yields results.\n * The exec results are handled by the given matchHandler and returned in an array.\n */\nconst matchAll = (regex, string, matchHandler = (i) => i, currentMatches = []) => {\n  const nextMatch = regex.exec(string);\n\n  if (!nextMatch) { return currentMatches; }\n\n  return [\n    ...matchAll(regex, string, matchHandler, [ ...currentMatches, matchHandler(nextMatch) ]),\n  ];\n};\n\nexport default matchAll;\n","export default (number, { min, max }) => number >= min && number <= max;\n","import { WATERMARK_TOP, WATERMARK_VALUES } from '../../constants.js';\n\nimport addWatermarkInTocEnd from './addWatermarkInTocEnd.js';\nimport searchAndDestroyWatermarkTop from './searchAndDestroyWatermarkTop.js';\n\nexport default (watermarkType) => (\n  () => (\n    (tree, file) => {\n      searchAndDestroyWatermarkTop(tree, file);\n      if (watermarkType === WATERMARK_VALUES.NONE) { return; }\n      if (watermarkType === WATERMARK_VALUES.TOP) { tree.children.splice(0, 0, { type: 'html', value: WATERMARK_TOP }); }\n      if (watermarkType === WATERMARK_VALUES.TOC) { addWatermarkInTocEnd(tree); }\n    }\n  )\n);\n","import isTocEnd from '../isTocEnd.js';\nimport { WATERMARK_TOC } from '../../constants.js';\n\nexport default (tree) => {\n  const tocEnd = tree.children.find((part) => isTocEnd(part));\n  if (tocEnd) { tocEnd.value = WATERMARK_TOC; }\n};\n","import { WATERMARK_TOP } from '../../constants.js';\n\nconst isWatermarkTop = (part) => part.type === 'html' && part.value === WATERMARK_TOP;\n\nexport default (tree, file) => {\n  const watermarkIndex = tree.children // Watermark can be moved by user\n    .map((part, index) => ({ part, index }))\n    .filter(({ part }) => isWatermarkTop(part))\n    .map(({ index }) => index)\n    .find(() => true);\n\n  if (typeof watermarkIndex === 'number') {\n    file.info(`Watermark found at index ${watermarkIndex}, destroying it to replace it`);\n    tree.children.splice(watermarkIndex, 1);\n  }\n};\n"],"names":[],"version":3,"file":"formatFromString.js.map"}