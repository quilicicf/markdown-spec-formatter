{"version":3,"sources":["lib/constants.js","lib/remark-plugins/toc/isTocStart.js","lib/remark-plugins/isTocEnd.js","lib/remark-plugins/toc/findTocStart.js","lib/matchAll.js","lib/remark-plugins/toc/parseTocConfiguration.js","lib/isInRange.js","lib/remark-plugins/toc/index.js","lib/remark-plugins/watermarkPlugin/addWatermarkInTocEnd.js","lib/remark-plugins/watermarkPlugin/searchAndDestroyWatermarkTop.js","lib/remark-plugins/watermarkPlugin/index.js","lib/formatFromString.js"],"names":["homePage","bugPage","DEFAULT_TOC_OPTIONS","min","max","TOC_START_MATCHER","TOC_END_MATCHER","WATERMARK_VALUES","NONE","TOP","TOC","WATERMARK_TOP","WATERMARK_TOC","DEFAULT_MARKDOWN_FORMATTER_OPTIONS","watermark","DEFAULT_STRINGIFY_OPTIONS","bullet","emphasis","fences","gfm","listItemIndent","rule","ruleSpaces","strong","part","type","test","value","tree","children","reduce","seed","tocStart","isInToc","tocStartIndex","tocContent","tocSize","undefined","matchAll","regex","string","matchHandler","i","currentMatches","nextMatch","exec","CONFIG_CLEANERS","minAsString","parseInt","error","Error","maxAsString","configAsString","configItems","match","key","map","configItem","process","stderr","write","message","filter","Boolean","number","transformer","file","tocStartFinder","info","tocConfiguration","filteredHeadings","depth","toc","splice","tocEnd","find","isWatermarkTop","watermarkIndex","index","watermarkType","sourceString","parameterMarkdownFormatterOptions","parameterStringifyOptions","markdownFormatterOptions","stringifyOptions","use","parse","tocPlugin","stringify"],"mappings":"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","file":"formatFromString.js","sourceRoot":"../node_modules/@quilicicf/markdown-formatter/lib","sourcesContent":["export const homePage = 'https://github.com/quilicicf/markdown-formatter'; // NOTE: must be the same as in package.json\nexport const bugPage = 'https://github.com/quilicicf/markdown-formatter/issues'; // NOTE: must be the same as in package.json\n\nexport const DEFAULT_TOC_OPTIONS = { min: 2, max: 4 };\nexport const TOC_START_MATCHER = /^<!-- TOC START(.*) -->$/;\nexport const TOC_END_MATCHER = /^<!-- TOC END(.*) -->$/;\n\nexport const WATERMARK_VALUES = {\n  NONE: 'none',\n  TOP: 'top',\n  TOC: 'toc',\n};\n\nexport const WATERMARK_TOP = `<!-- Formatted by ${homePage} -->`;\nexport const WATERMARK_TOC = `<!-- TOC END: Formatted by ${homePage} -->`;\n\nexport const DEFAULT_MARKDOWN_FORMATTER_OPTIONS = {\n  watermark: WATERMARK_VALUES.NONE,\n};\n\nexport const DEFAULT_STRINGIFY_OPTIONS = {\n  bullet: '*',\n  emphasis: '_',\n  fences: true,\n  gfm: true,\n  listItemIndent: '1',\n  rule: '-',\n  ruleSpaces: false,\n  strong: '_',\n};\n","import { TOC_START_MATCHER } from '../../constants.js';\n\nexport default (part) => part.type === 'html' && TOC_START_MATCHER.test(part.value);\n","import { TOC_END_MATCHER } from '../constants.js';\n\nexport default (part) => part.type === 'html' && TOC_END_MATCHER.test(part.value);\n","import isTocStart from './isTocStart.js';\nimport isTocEnd from '../isTocEnd.js';\n\nexport default (tree) => tree.children.reduce(\n  (seed, part) => {\n    if (seed.tocStart && !seed.isInToc) { return seed; }\n    if (isTocEnd(part)) { return { ...seed, isInToc: false }; }\n    if (isTocStart(part)) {\n      return {\n        ...seed,\n        tocStart: part,\n        tocStartIndex: seed.tocStartIndex,\n        isInToc: true,\n      };\n    }\n\n    return seed.isInToc\n      ? { ...seed, tocContent: [ ...seed.tocContent, part ], tocSize: seed.tocSize + 1 }\n      : { ...seed, tocStartIndex: seed.tocStartIndex + 1 };\n  },\n  {\n    tocStartIndex: 0,\n    tocSize: 0,\n    tocStart: undefined,\n    tocContent: [],\n    isInToc: false,\n  },\n);\n","/**\n * Takes a GLOBAL (add flag g) regex and executes it against the same string as long as it yields results.\n * The exec results are handled by the given matchHandler and returned in an array.\n */\nconst matchAll = (regex, string, matchHandler = (i) => i, currentMatches = []) => {\n  const nextMatch = regex.exec(string);\n\n  if (!nextMatch) { return currentMatches; }\n\n  return [\n    ...matchAll(regex, string, matchHandler, [ ...currentMatches, matchHandler(nextMatch) ]),\n  ];\n};\n\nexport default matchAll;\n","import matchAll from '../../matchAll.js';\nimport { TOC_START_MATCHER } from '../../constants.js';\n\nconst CONFIG_CLEANERS = {\n  min (minAsString) {\n    try {\n      return parseInt(minAsString, 10);\n    } catch (error) {\n      throw Error(`Min must be a number, got ${minAsString}`);\n    }\n  },\n  max (maxAsString) {\n    try {\n      return parseInt(maxAsString, 10);\n    } catch (error) {\n      throw Error(`Min must be a number, got ${maxAsString}`);\n    }\n  },\n};\n\nexport default (tocStart) => {\n  const configAsString = TOC_START_MATCHER.exec(tocStart)[ 1 ];\n  const configItems = matchAll(\n    /([^\\s:]+):([^\\s]+)/g,\n    configAsString,\n    (match) => ({ key: match[ 1 ], value: match[ 2 ] }),\n  );\n  return configItems\n    .map((configItem) => {\n      if (!CONFIG_CLEANERS[ configItem.key ]) {\n        return configItem;\n      }\n\n      try {\n        return {\n          key: configItem.key,\n          value: CONFIG_CLEANERS[ configItem.key ](configItem.value),\n        };\n      } catch (error) {\n        process.stderr.write(error.message);\n        return {};\n      }\n    })\n    .filter(Boolean)\n    .reduce(\n      (seed, { value, key }) => ({ ...seed, [ key ]: value }),\n      {},\n    );\n};\n","export default (number, { min, max }) => number >= min && number <= max;\n","import { toc as makeToc } from 'mdast-util-toc';\nimport { u as buildNode } from 'unist-builder';\n\nimport findTocStart from './findTocStart.js';\nimport parseTocConfiguration from './parseTocConfiguration.js';\n\nimport isInRange from '../../isInRange.js';\nimport { DEFAULT_TOC_OPTIONS } from '../../constants.js';\n\nconst transformer = (tree, file) => {\n  const tocStartFinder = findTocStart(tree);\n\n  if (!tocStartFinder.tocStart) {\n    file.info('No ToC start found, only simple formatting was done');\n    return;\n  }\n\n  const tocConfiguration = {\n    ...DEFAULT_TOC_OPTIONS,\n    ...parseTocConfiguration(tocStartFinder.tocStart.value),\n  };\n\n  const filteredHeadings = tree.children.filter(\n    (part) => part.type === 'heading' && isInRange(part.depth, tocConfiguration),\n  );\n\n  const toc = makeToc(buildNode('root', filteredHeadings)).map;\n  tree.children.splice(tocStartFinder.tocStartIndex + 1, tocStartFinder.tocSize, toc);\n};\n\nexport default () => transformer;\n","import isTocEnd from '../isTocEnd.js';\nimport { WATERMARK_TOC } from '../../constants.js';\n\nexport default (tree) => {\n  const tocEnd = tree.children.find((part) => isTocEnd(part));\n  if (tocEnd) { tocEnd.value = WATERMARK_TOC; }\n};\n","import { WATERMARK_TOP } from '../../constants.js';\n\nconst isWatermarkTop = (part) => part.type === 'html' && part.value === WATERMARK_TOP;\n\nexport default (tree, file) => {\n  const watermarkIndex = tree.children // Watermark can be moved by user\n    .map((part, index) => ({ part, index }))\n    .filter(({ part }) => isWatermarkTop(part))\n    .map(({ index }) => index)\n    .find(() => true);\n\n  if (typeof watermarkIndex === 'number') {\n    file.info(`Watermark found at index ${watermarkIndex}, destroying it to replace it`);\n    tree.children.splice(watermarkIndex, 1);\n  }\n};\n","import { WATERMARK_TOP, WATERMARK_VALUES } from '../../constants.js';\n\nimport addWatermarkInTocEnd from './addWatermarkInTocEnd.js';\nimport searchAndDestroyWatermarkTop from './searchAndDestroyWatermarkTop.js';\n\nexport default (watermarkType) => (\n  () => (\n    (tree, file) => {\n      searchAndDestroyWatermarkTop(tree, file);\n      if (watermarkType === WATERMARK_VALUES.NONE) { return; }\n      if (watermarkType === WATERMARK_VALUES.TOP) { tree.children.splice(0, 0, { type: 'html', value: WATERMARK_TOP }); }\n      if (watermarkType === WATERMARK_VALUES.TOC) { addWatermarkInTocEnd(tree); }\n    }\n  )\n);\n","import { unified } from 'unified';\nimport parse from 'remark-parse';\nimport gfm from 'remark-gfm';\nimport stringify from 'remark-stringify';\n\nimport tocPlugin from './remark-plugins/toc/index.js';\nimport watermarkPlugin from './remark-plugins/watermarkPlugin/index.js';\nimport { DEFAULT_MARKDOWN_FORMATTER_OPTIONS, DEFAULT_STRINGIFY_OPTIONS } from './constants.js';\n\nexport default async (sourceString, parameterMarkdownFormatterOptions = {}, parameterStringifyOptions = {}) => {\n  const markdownFormatterOptions = {\n    ...DEFAULT_MARKDOWN_FORMATTER_OPTIONS,\n    ...parameterMarkdownFormatterOptions,\n  };\n  const stringifyOptions = {\n    ...DEFAULT_STRINGIFY_OPTIONS,\n    ...parameterStringifyOptions,\n  };\n\n  return unified()\n    .use(parse)\n    .use(gfm)\n    .use(tocPlugin)\n    .use(watermarkPlugin(markdownFormatterOptions.watermark))\n    .use(stringify, stringifyOptions)\n    .process(sourceString);\n};\n"]}